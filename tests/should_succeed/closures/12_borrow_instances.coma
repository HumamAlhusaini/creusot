module M_12_borrow_instances__test1 [#"12_borrow_instances.rs" 9 0 9 59]
  let%span s12_borrow_instances = "12_borrow_instances.rs" 6 10 6 73
  let%span s12_borrow_instances'0 = "12_borrow_instances.rs" 7 10 7 112
  let%span s12_borrow_instances'1 = "12_borrow_instances.rs" 8 10 8 82
  let%span s12_borrow_instances'2 = "12_borrow_instances.rs" 9 60 9 62
  let%span sops = "../../../creusot-contracts/src/std/ops.rs" 151 14 151 114
  let%span sops'0 = "../../../creusot-contracts/src/std/ops.rs" 156 14 156 101
  let%span sops'1 = "../../../creusot-contracts/src/std/ops.rs" 116 15 116 59
  let%span sops'2 = "../../../creusot-contracts/src/std/ops.rs" 117 14 117 36
  let%span sops'3 = "../../../creusot-contracts/src/std/ops.rs" 122 14 122 31
  let%span sops'4 = "../../../creusot-contracts/src/std/ops.rs" 127 15 127 29
  let%span sops'5 = "../../../creusot-contracts/src/std/ops.rs" 128 15 128 26
  let%span sops'6 = "../../../creusot-contracts/src/std/ops.rs" 129 14 129 28
  let%span sops'7 = "../../../creusot-contracts/src/std/ops.rs" 134 14 135 105
  
  use creusot.int.UInt32
  
  type t_F
  
  predicate postcondition_once (self : t_F) (args : UInt32.t) (result : bool)
  
  predicate resolve (_0 : t_F)
  
  predicate postcondition_mut (self : t_F) (args : UInt32.t) (result_state : t_F) (result : bool)
  
  function fn_mut_once (self : t_F) (args : UInt32.t) (res : bool) : ()
  
  axiom fn_mut_once_spec : forall self : t_F, args : UInt32.t, res : bool . [%#sops'7] postcondition_once self args res
  = (exists res_state : t_F . postcondition_mut self args res_state res /\ resolve res_state)
  
  predicate unnest (self : t_F) (_1 : t_F)
  
  function unnest_trans (self : t_F) (b : t_F) (c : t_F) : ()
  
  axiom unnest_trans_spec : forall self : t_F, b : t_F, c : t_F . ([%#sops'4] unnest self b)
   -> ([%#sops'5] unnest b c)  -> ([%#sops'6] unnest self c)
  
  function unnest_refl (self : t_F) : ()
  
  axiom unnest_refl_spec : forall self : t_F . [%#sops'3] unnest self self
  
  function postcondition_mut_unnest (self : t_F) (args : UInt32.t) (res_state : t_F) (res : bool) : ()
  
  axiom postcondition_mut_unnest_spec : forall self : t_F, args : UInt32.t, res_state : t_F, res : bool . ([%#sops'1] postcondition_mut self args res_state res)
   -> ([%#sops'2] unnest self res_state)
  
  predicate postcondition (self : t_F) (args : UInt32.t) (result : bool)
  
  function fn_once (self : t_F) (args : UInt32.t) (res : bool) : ()
  
  axiom fn_once_spec : forall self : t_F, args : UInt32.t, res : bool . [%#sops'0] postcondition_once self args res
  = (resolve self /\ postcondition self args res)
  
  function fn_mut (self : t_F) (args : UInt32.t) (res_state : t_F) (res : bool) : ()
  
  axiom fn_mut_spec : forall self : t_F, args : UInt32.t, res_state : t_F, res : bool . [%#sops] postcondition_mut self args res_state res
  = (self = res_state /\ postcondition self args res)
  
  predicate postcondition_once'0 (self : t_F) (args : UInt32.t) (result : bool) =
    postcondition self args result
  
  predicate resolve'0 (_0 : t_F)
  
  predicate postcondition_mut'0 (self : t_F) (args : UInt32.t) (result_state : t_F) (result : bool) =
    postcondition self args result /\ self = result_state
  
  function fn_mut_once'0 (self : t_F) (args : UInt32.t) (res : bool) : ()
  
  axiom fn_mut_once_spec'0 : forall self : t_F, args : UInt32.t, res : bool . [%#sops'7] postcondition_once'0 self args res
  = (exists res_state : t_F . postcondition_mut'0 self args res_state res /\ resolve'0 res_state)
  
  predicate unnest'0 (self : t_F) (_1 : t_F)
  
  function unnest_trans'0 (self : t_F) (b : t_F) (c : t_F) : ()
  
  axiom unnest_trans_spec'0 : forall self : t_F, b : t_F, c : t_F . ([%#sops'4] unnest'0 self b)
   -> ([%#sops'5] unnest'0 b c)  -> ([%#sops'6] unnest'0 self c)
  
  function unnest_refl'0 (self : t_F) : ()
  
  axiom unnest_refl_spec'0 : forall self : t_F . [%#sops'3] unnest'0 self self
  
  function postcondition_mut_unnest'0 (self : t_F) (args : UInt32.t) (res_state : t_F) (res : bool) : ()
  
  axiom postcondition_mut_unnest_spec'0 : forall self : t_F, args : UInt32.t, res_state : t_F, res : bool . ([%#sops'1] postcondition_mut'0 self args res_state res)
   -> ([%#sops'2] unnest'0 self res_state)
  
  predicate postcondition'0 (self : t_F) (args : UInt32.t) (result : bool) =
    postcondition self args result
  
  function fn_once'0 (self : t_F) (args : UInt32.t) (res : bool) : ()
  
  axiom fn_once_spec'0 : forall self : t_F, args : UInt32.t, res : bool . [%#sops'0] postcondition_once'0 self args res
  = (resolve'0 self /\ postcondition'0 self args res)
  
  function fn_mut'0 (self : t_F) (args : UInt32.t) (res_state : t_F) (res : bool) : ()
  
  axiom fn_mut_spec'0 : forall self : t_F, args : UInt32.t, res_state : t_F, res : bool . [%#sops] postcondition_mut'0 self args res_state res
  = (self = res_state /\ postcondition'0 self args res)
  
  constant x  : t_F
  
  constant n  : UInt32.t
  
  constant r  : bool
  
  function test1 [#"12_borrow_instances.rs" 9 0 9 59] (x'0 : t_F) (n'0 : UInt32.t) (r'0 : bool) : ()
  
  goal vc_test1 : ([%#s12_borrow_instances] postcondition'0 x n r = postcondition x n r)
  && ([%#s12_borrow_instances'0] forall xx : t_F . postcondition_mut'0 x n xx r = (postcondition x n r /\ x = xx))
  && ([%#s12_borrow_instances'1] postcondition_once'0 x n r = postcondition x n r)
end
module M_12_borrow_instances__test2 [#"12_borrow_instances.rs" 15 0 15 66]
  let%span s12_borrow_instances = "12_borrow_instances.rs" 13 10 13 130
  let%span s12_borrow_instances'0 = "12_borrow_instances.rs" 14 10 14 93
  let%span s12_borrow_instances'1 = "12_borrow_instances.rs" 15 67 15 69
  let%span sops = "../../../creusot-contracts/src/std/ops.rs" 116 15 116 59
  let%span sops'0 = "../../../creusot-contracts/src/std/ops.rs" 117 14 117 36
  let%span sops'1 = "../../../creusot-contracts/src/std/ops.rs" 122 14 122 31
  let%span sops'2 = "../../../creusot-contracts/src/std/ops.rs" 127 15 127 29
  let%span sops'3 = "../../../creusot-contracts/src/std/ops.rs" 128 15 128 26
  let%span sops'4 = "../../../creusot-contracts/src/std/ops.rs" 129 14 129 28
  let%span sops'5 = "../../../creusot-contracts/src/std/ops.rs" 134 14 135 105
  let%span sresolve = "../../../creusot-contracts/src/resolve.rs" 54 20 54 34
  
  use creusot.prelude.MutBorrow
  use creusot.int.UInt32
  
  type t_F
  
  predicate postcondition_once (self : t_F) (args : UInt32.t) (result : bool)
  
  predicate resolve (_0 : t_F)
  
  predicate postcondition_mut (self : t_F) (args : UInt32.t) (result_state : t_F) (result : bool)
  
  function fn_mut_once (self : t_F) (args : UInt32.t) (res : bool) : ()
  
  axiom fn_mut_once_spec : forall self : t_F, args : UInt32.t, res : bool . [%#sops'5] postcondition_once self args res
  = (exists res_state : t_F . postcondition_mut self args res_state res /\ resolve res_state)
  
  predicate unnest (self : t_F) (_1 : t_F)
  
  function unnest_trans (self : t_F) (b : t_F) (c : t_F) : ()
  
  axiom unnest_trans_spec : forall self : t_F, b : t_F, c : t_F . ([%#sops'2] unnest self b)
   -> ([%#sops'3] unnest b c)  -> ([%#sops'4] unnest self c)
  
  function unnest_refl (self : t_F) : ()
  
  axiom unnest_refl_spec : forall self : t_F . [%#sops'1] unnest self self
  
  function postcondition_mut_unnest (self : t_F) (args : UInt32.t) (res_state : t_F) (res : bool) : ()
  
  axiom postcondition_mut_unnest_spec : forall self : t_F, args : UInt32.t, res_state : t_F, res : bool . ([%#sops] postcondition_mut self args res_state res)
   -> ([%#sops'0] unnest self res_state)
  
  predicate postcondition_once'0 (self : MutBorrow.t t_F) (args : UInt32.t) (result : bool) =
    postcondition_mut self.current args self.final result
  
  predicate resolve'0 (self : MutBorrow.t t_F) =
    [%#sresolve] self.final = self.current
  
  predicate resolve'1 (_0 : MutBorrow.t t_F) =
    resolve'0 _0
  
  predicate postcondition_mut'0 (self : MutBorrow.t t_F) (args : UInt32.t) (result_state : MutBorrow.t t_F) (result : bool)
  
   =
    postcondition_mut self.current args result_state.current result /\ self.final = result_state.final
  
  function fn_mut_once'0 (self : MutBorrow.t t_F) (args : UInt32.t) (res : bool) : ()
  
  axiom fn_mut_once_spec'0 : forall self : MutBorrow.t t_F, args : UInt32.t, res : bool . [%#sops'5] postcondition_once'0 self args res
  = (exists res_state : MutBorrow.t t_F . postcondition_mut'0 self args res_state res /\ resolve'1 res_state)
  
  predicate unnest'0 (self : MutBorrow.t t_F) (_1 : MutBorrow.t t_F)
  
  function unnest_trans'0 (self : MutBorrow.t t_F) (b : MutBorrow.t t_F) (c : MutBorrow.t t_F) : ()
  
  axiom unnest_trans_spec'0 : forall self : MutBorrow.t t_F, b : MutBorrow.t t_F, c : MutBorrow.t t_F . ([%#sops'2] unnest'0 self b)
   -> ([%#sops'3] unnest'0 b c)  -> ([%#sops'4] unnest'0 self c)
  
  function unnest_refl'0 (self : MutBorrow.t t_F) : ()
  
  axiom unnest_refl_spec'0 : forall self : MutBorrow.t t_F . [%#sops'1] unnest'0 self self
  
  function postcondition_mut_unnest'0 (self : MutBorrow.t t_F) (args : UInt32.t) (res_state : MutBorrow.t t_F) (res : bool) : ()
  
  
  axiom postcondition_mut_unnest_spec'0 : forall self : MutBorrow.t t_F, args : UInt32.t, res_state : MutBorrow.t t_F, res : bool . ([%#sops] postcondition_mut'0 self args res_state res)
   -> ([%#sops'0] unnest'0 self res_state)
  
  constant x  : MutBorrow.t t_F
  
  constant n  : UInt32.t
  
  constant r  : bool
  
  function test2 [#"12_borrow_instances.rs" 15 0 15 66] (x'0 : MutBorrow.t t_F) (n'0 : UInt32.t) (r'0 : bool) : ()
  
  goal vc_test2 : ([%#s12_borrow_instances] forall xx : MutBorrow.t t_F . postcondition_mut'0 x n xx r
  = (postcondition_mut x.current n xx.current r /\ x.final = xx.final))
  && ([%#s12_borrow_instances'0] postcondition_once'0 x n r = postcondition_mut x.current n x.final r)
end
