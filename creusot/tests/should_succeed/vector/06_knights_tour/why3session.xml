<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.12.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.6.0" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="06_knights_tour.coma"/>
<theory name="M_06_knights_tour__qyi50474406909270761__clone__refines" proved="true">
 <goal name="refines" proved="true">
 <proof prover="4" timelimit="5"><result status="valid" time="0.008824" steps="6"/></proof>
 </goal>
</theory>
<theory name="M_06_knights_tour__qyi50474406909270761__clone" proved="true">
 <goal name="vc_clone&#39;0" proved="true">
 <proof prover="2" timelimit="1"><result status="valid" time="0.010212" steps="992"/></proof>
 </goal>
</theory>
<theory name="M_06_knights_tour__qyi18370800917002056__mov" proved="true">
 <goal name="vc_mov&#39;0" proved="true">
 <proof prover="1"><result status="valid" time="0.017285" steps="883"/></proof>
 </goal>
</theory>
<theory name="M_06_knights_tour__qyi4580598960913230815__new" proved="true">
 <goal name="vc_closure3&#39;0" proved="true">
 <proof prover="2"><result status="valid" time="0.016865" steps="62639"/></proof>
 </goal>
 <goal name="vc_new&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_new&#39;0.0" expl="map_inv &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.022329" steps="11"/></proof>
  </goal>
  <goal name="vc_new&#39;0.1" expl="map_inv &#39;func&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.020583" steps="12"/></proof>
  </goal>
  <goal name="vc_new&#39;0.2" expl="map_inv requires #0" proved="true">
  <proof prover="4"><result status="valid" time="0.017173" steps="27"/></proof>
  </goal>
  <goal name="vc_new&#39;0.3" expl="map_inv requires #1" proved="true">
  <proof prover="4"><result status="valid" time="0.020334" steps="223"/></proof>
  </goal>
  <goal name="vc_new&#39;0.4" expl="map_inv requires #2" proved="true">
  <proof prover="4"><result status="valid" time="0.022748" steps="71"/></proof>
  </goal>
  <goal name="vc_new&#39;0.5" expl="collect &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.029865" steps="11"/></proof>
  </goal>
  <goal name="vc_new&#39;0.6" expl="new ensures #0" proved="true">
  <proof prover="2"><result status="valid" time="0.026187" steps="11639"/></proof>
  </goal>
  <goal name="vc_new&#39;0.7" expl="new ensures #1" proved="true">
  <proof prover="2"><result status="valid" time="0.118510" steps="336824"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_knights_tour__qyi4580598960913230815__available" proved="true">
 <goal name="vc_available&#39;0" proved="true">
 <proof prover="1"><result status="valid" time="0.068844" steps="23836"/></proof>
 </goal>
</theory>
<theory name="M_06_knights_tour__qyi4580598960913230815__count_degree" proved="true">
 <goal name="vc_count_degree&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_count_degree&#39;0.0" expl="into_iter &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.023718" steps="13"/></proof>
  </goal>
  <goal name="vc_count_degree&#39;0.1" expl="into_iter requires" proved="true">
  <proof prover="4"><result status="valid" time="0.019534" steps="10"/></proof>
  </goal>
  <goal name="vc_count_degree&#39;0.2" expl="for invariant" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.019347" steps="15"/></proof>
  </goal>
  <goal name="vc_count_degree&#39;0.3" expl="for invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.020102" steps="14"/></proof>
  </goal>
  <goal name="vc_count_degree&#39;0.4" expl="for invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.033387" steps="12011"/></proof>
  </goal>
  <goal name="vc_count_degree&#39;0.5" expl="loop invariant" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.022461" steps="19"/></proof>
  </goal>
  <goal name="vc_count_degree&#39;0.6" expl="next &#39;self&#39; type invariant" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.000001" steps="27"/></proof>
  </goal>
  <goal name="vc_count_degree&#39;0.7" expl="mov requires #0" proved="true">
  <proof prover="4"><result status="valid" time="0.018083" steps="62"/></proof>
  </goal>
  <goal name="vc_count_degree&#39;0.8" expl="mov requires #1" proved="true">
  <proof prover="4"><result status="valid" time="0.022108" steps="67"/></proof>
  </goal>
  <goal name="vc_count_degree&#39;0.9" expl="mov requires #2" proved="true">
  <proof prover="4"><result status="valid" time="0.504659" steps="8686"/></proof>
  </goal>
  <goal name="vc_count_degree&#39;0.10" expl="mov requires #3" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.428894" steps="8847"/></proof>
  </goal>
  <goal name="vc_count_degree&#39;0.11" expl="available requires" proved="true">
  <proof prover="4"><result status="valid" time="0.019021" steps="33"/></proof>
  </goal>
  <goal name="vc_count_degree&#39;0.12" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.022082" steps="79949"/></proof>
  </goal>
  <goal name="vc_count_degree&#39;0.13" expl="for invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.022151" steps="65"/></proof>
  </goal>
  <goal name="vc_count_degree&#39;0.14" expl="for invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.075614" steps="13234"/></proof>
  </goal>
  <goal name="vc_count_degree&#39;0.15" expl="loop invariant" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.038518" steps="20928"/></proof>
  </goal>
  <goal name="vc_count_degree&#39;0.16" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.063557" steps="759"/></proof>
  </goal>
  <goal name="vc_count_degree&#39;0.17" expl="for invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.153830" steps="18521"/></proof>
  </goal>
  <goal name="vc_count_degree&#39;0.18" expl="for invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.022062" steps="72"/></proof>
  </goal>
  <goal name="vc_count_degree&#39;0.19" expl="for invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.076768" steps="13262"/></proof>
  </goal>
  <goal name="vc_count_degree&#39;0.20" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.022602" steps="95"/></proof>
  </goal>
  <goal name="vc_count_degree&#39;0.21" proved="true">
  <proof prover="1"><result status="valid" time="0.142720" steps="9448"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_knights_tour__qyi4580598960913230815__set" proved="true">
 <goal name="vc_set&#39;0" proved="true">
 <proof prover="1"><result status="valid" time="0.107416" steps="38479"/></proof>
 </goal>
</theory>
<theory name="M_06_knights_tour__min" proved="true">
 <goal name="vc_min&#39;0" proved="true">
 <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
  <goal name="vc_min&#39;0.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_min&#39;0.0.0" expl="into_iter &#39;self&#39; type invariant" proved="true">
   <proof prover="4"><result status="valid" time="0.016565" steps="5"/></proof>
   </goal>
   <goal name="vc_min&#39;0.0.1" expl="into_iter requires" proved="true">
   <proof prover="4"><result status="valid" time="0.015896" steps="4"/></proof>
   </goal>
   <goal name="vc_min&#39;0.0.2" expl="for invariant" proved="true">
   <proof prover="1" timelimit="5"><result status="valid" time="0.027732" steps="6863"/></proof>
   </goal>
   <goal name="vc_min&#39;0.0.3" expl="for invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.133446" steps="6868"/></proof>
   </goal>
   <goal name="vc_min&#39;0.0.4" expl="for invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.028150" steps="7530"/></proof>
   </goal>
   <goal name="vc_min&#39;0.0.5" expl="min ensures" proved="true">
   <proof prover="4"><result status="valid" time="0.020839" steps="65"/></proof>
   </goal>
   <goal name="vc_min&#39;0.0.6" expl="for invariant" proved="true">
   <proof prover="4" timelimit="5"><result status="valid" time="0.019544" steps="30"/></proof>
   </goal>
   <goal name="vc_min&#39;0.0.7" expl="for invariant" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.020000" steps="90475"/></proof>
   </goal>
   <goal name="vc_min&#39;0.0.8" expl="for invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.078365" steps="14807"/></proof>
   </goal>
   <goal name="vc_min&#39;0.0.9" expl="loop invariant" proved="true">
   <proof prover="4" timelimit="5"><result status="valid" time="0.135535" steps="2979"/></proof>
   </goal>
   <goal name="vc_min&#39;0.0.10" expl="for invariant" proved="true">
   <proof prover="1" timelimit="5"><result status="valid" time="0.035936" steps="12994"/></proof>
   </goal>
   <goal name="vc_min&#39;0.0.11" expl="for invariant" proved="true">
   <proof prover="4"><result status="valid" time="0.020358" steps="42"/></proof>
   </goal>
   <goal name="vc_min&#39;0.0.12" expl="for invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.135505" steps="15098"/></proof>
   </goal>
   <goal name="vc_min&#39;0.0.13" expl="loop invariant" proved="true">
   <proof prover="4" timelimit="5"><result status="valid" time="0.019105" steps="197"/></proof>
   </goal>
   <goal name="vc_min&#39;0.0.14" expl="for invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.165730" steps="19921"/></proof>
   </goal>
   <goal name="vc_min&#39;0.0.15" expl="for invariant" proved="true">
   <proof prover="4"><result status="valid" time="0.021156" steps="42"/></proof>
   </goal>
   <goal name="vc_min&#39;0.0.16" expl="for invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.040262" steps="15102"/></proof>
   </goal>
   <goal name="vc_min&#39;0.0.17" expl="loop invariant" proved="true">
   <proof prover="4" timelimit="5"><result status="valid" time="0.322414" steps="7156"/></proof>
   </goal>
   <goal name="vc_min&#39;0.0.18" proved="true">
   <proof prover="1"><result status="valid" time="0.043536" steps="11113"/></proof>
   </goal>
   <goal name="vc_min&#39;0.0.19" proved="true">
   <proof prover="1"><result status="valid" time="0.038910" steps="10956"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_knights_tour__dumb_nonlinear_arith" proved="true">
 <goal name="vc_dumb_nonlinear_arith&#39;0" proved="true">
 <proof prover="4"><result status="valid" time="0.012743" steps="4"/></proof>
 </goal>
</theory>
<theory name="M_06_knights_tour__knights_tour" proved="true">
 <goal name="vc_knights_tour&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_knights_tour&#39;0.0" expl="new requires" proved="true">
  <proof prover="1"><result status="valid" time="0.024890" steps="6007"/></proof>
  <proof prover="4" timelimit="5"><result status="valid" time="0.042943" steps="12"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.1" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.019753" steps="33"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.2" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.019798" steps="40"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.3" expl="set requires #0" proved="true">
  <proof prover="4"><result status="valid" time="0.032201" steps="22"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.4" expl="set requires #1" proved="true">
  <proof prover="4"><result status="valid" time="0.025708" steps="94"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.5" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.020658" steps="50"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.6" expl="into_iter &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.021729" steps="140"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.7" expl="into_iter requires" proved="true">
  <proof prover="4"><result status="valid" time="0.019183" steps="48"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.8" expl="for invariant" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.080026" steps="7909"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.9" expl="for invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.025832" steps="57"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.10" expl="for invariant" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.031834" steps="222"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.11" expl="loop invariant #0" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.037702" steps="63"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.12" expl="loop invariant #1" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.021887" steps="6526"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.13" expl="loop invariant #2" proved="true">
  <proof prover="4"><result status="valid" time="0.034441" steps="366"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.14" expl="next &#39;self&#39; type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.036381" steps="8620"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.15" expl="into_iter &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.023910" steps="295"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.16" expl="into_iter requires" proved="true">
  <proof prover="4"><result status="valid" time="0.030738" steps="139"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.17" expl="for invariant" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.055860" steps="17042"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.18" expl="for invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.024969" steps="150"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.19" expl="for invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.164186" steps="1207"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.20" expl="loop invariant" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.039699" steps="13973"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.21" expl="next &#39;self&#39; type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.073276" steps="18150"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.22" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.120767" steps="2237"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.23" expl="mov requires #0" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.025322" steps="604"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.24" expl="mov requires #1" proved="true">
  <proof prover="4"><result status="valid" time="0.046729" steps="619"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.25" expl="mov requires #2" proved="true">
  <proof prover="4"><result status="valid" time="0.181138" steps="3023"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.26" expl="mov requires #3" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.283490" steps="3179"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.27" expl="available requires" proved="true">
  <proof prover="1"><result status="valid" time="0.028094" steps="13895"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.28" expl="for invariant" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.038049" steps="557"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.29" expl="for invariant" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.078069" steps="563"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.30" expl="for invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.221835" steps="2043"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.31" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.083415" steps="35853"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.32" expl="count_degree requires #0" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.034541" steps="222"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.33" expl="count_degree requires #1" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.035440" steps="222"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.34" expl="push &#39;self&#39; type invariant" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.027339" steps="572"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.35" expl="push &#39;value&#39; type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.087989" steps="18837"/></proof>
  <proof prover="4"><result status="valid" time="0.026616" steps="581"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.36" expl="for invariant" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.160168" steps="18794"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.37" expl="for invariant" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.057049" steps="18797"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.38" expl="for invariant" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.251172" steps="3046"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.39" expl="loop invariant" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.484985" steps="77195"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.40" proved="true">
  <proof prover="1"><result status="valid" time="0.047231" steps="14461"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.41" proved="true">
  <proof prover="1"><result status="valid" time="0.057128" steps="7589"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.42" expl="set requires #0" proved="true">
  <proof prover="4"><result status="valid" time="0.025514" steps="270"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.43" expl="set requires #1" proved="true">
  <proof prover="4"><result status="valid" time="0.029836" steps="1677"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.44" expl="for invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.058617" steps="19260"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.45" expl="for invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.067339" steps="19268"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.46" expl="for invariant" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.072750" steps="1772"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.47" expl="loop invariant #0" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.020728" steps="299"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.48" expl="loop invariant #1" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.084407" steps="299"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.49" expl="loop invariant #2" proved="true">
  <proof prover="4"><result status="valid" time="0.679406" steps="10946"/></proof>
  </goal>
  <goal name="vc_knights_tour&#39;0.50" proved="true">
  <proof prover="1"><result status="valid" time="0.038525" steps="14929"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
