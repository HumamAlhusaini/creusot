<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.12.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.6.0" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="06_knights_tour.coma"/>
<theory name="M_06_knights_tour__qyi50474406909270761__clone" proved="true">
 <goal name="vc_clone&#39;" proved="true">
 <proof prover="2" timelimit="1"><result status="valid" time="0.010212" steps="257"/></proof>
 </goal>
</theory>
<theory name="M_06_knights_tour__qyi50474406909270761" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="4"><result status="valid" time="0.013985" steps="6"/></proof>
 </goal>
</theory>
<theory name="M_06_knights_tour__qyi18370800917002056__mov" proved="true">
 <goal name="vc_mov" proved="true">
 <proof prover="1"><result status="valid" time="0.017285" steps="2110"/></proof>
 </goal>
</theory>
<theory name="M_06_knights_tour__qyi4580598960913230815__new" proved="true">
 <goal name="vc_new" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_new.0" expl="map_inv &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.022329" steps="11"/></proof>
  </goal>
  <goal name="vc_new.1" expl="map_inv &#39;func&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.020583" steps="12"/></proof>
  </goal>
  <goal name="vc_new.2" expl="map_inv requires #0" proved="true">
  <proof prover="4"><result status="valid" time="0.017173" steps="22"/></proof>
  </goal>
  <goal name="vc_new.3" expl="map_inv requires #1" proved="true">
  <proof prover="4"><result status="valid" time="0.020334" steps="229"/></proof>
  </goal>
  <goal name="vc_new.4" expl="map_inv requires #2" proved="true">
  <proof prover="4"><result status="valid" time="0.022748" steps="58"/></proof>
  </goal>
  <goal name="vc_new.5" expl="collect &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.029865" steps="11"/></proof>
  </goal>
  <goal name="vc_new.6" expl="new ensures #0" proved="true">
  <proof prover="2"><result status="valid" time="0.026187" steps="146716"/></proof>
  </goal>
  <goal name="vc_new.7" expl="new ensures #1" proved="true">
  <proof prover="2"><result status="valid" time="0.118510" steps="436576"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_knights_tour__qyi4580598960913230815__new__qyClosure3" proved="true">
 <goal name="vc_m_06_knights_tour__qyi4580598960913230815__new__qyClosure3" proved="true">
 <proof prover="4"><result status="valid" time="0.019504" steps="31"/></proof>
 </goal>
</theory>
<theory name="M_06_knights_tour__qyi4580598960913230815__available" proved="true">
 <goal name="vc_available" proved="true">
 <proof prover="1"><result status="valid" time="0.068844" steps="20143"/></proof>
 </goal>
</theory>
<theory name="M_06_knights_tour__qyi4580598960913230815__count_degree" proved="true">
 <goal name="vc_count_degree" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_count_degree.0" expl="into_iter &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.023718" steps="11"/></proof>
  </goal>
  <goal name="vc_count_degree.1" expl="into_iter requires" proved="true">
  <proof prover="4"><result status="valid" time="0.019534" steps="8"/></proof>
  </goal>
  <goal name="vc_count_degree.2" expl="for invariant" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.019347" steps="13"/></proof>
  </goal>
  <goal name="vc_count_degree.3" expl="for invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.020102" steps="12"/></proof>
  </goal>
  <goal name="vc_count_degree.4" expl="for invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.033387" steps="13036"/></proof>
  </goal>
  <goal name="vc_count_degree.5" expl="loop invariant" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.022461" steps="16"/></proof>
  </goal>
  <goal name="vc_count_degree.6" expl="next &#39;self&#39; type invariant" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.000001" steps="26"/></proof>
  </goal>
  <goal name="vc_count_degree.7" expl="mov requires #0" proved="true">
  <proof prover="4"><result status="valid" time="0.018083" steps="62"/></proof>
  </goal>
  <goal name="vc_count_degree.8" expl="mov requires #1" proved="true">
  <proof prover="4"><result status="valid" time="0.022108" steps="65"/></proof>
  </goal>
  <goal name="vc_count_degree.9" expl="mov requires #2" proved="true">
  <proof prover="4"><result status="valid" time="0.504659" steps="9119"/></proof>
  </goal>
  <goal name="vc_count_degree.10" expl="mov requires #3" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.428894" steps="9345"/></proof>
  </goal>
  <goal name="vc_count_degree.11" expl="available requires" proved="true">
  <proof prover="4"><result status="valid" time="0.019021" steps="30"/></proof>
  </goal>
  <goal name="vc_count_degree.12" expl="for invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.153830" steps="20071"/></proof>
  </goal>
  <goal name="vc_count_degree.13" expl="for invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.022062" steps="63"/></proof>
  </goal>
  <goal name="vc_count_degree.14" expl="for invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.076768" steps="13804"/></proof>
  </goal>
  <goal name="vc_count_degree.15" expl="loop invariant" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.038518" steps="15173"/></proof>
  </goal>
  <goal name="vc_count_degree.16" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.063557" steps="720"/></proof>
  </goal>
  <goal name="vc_count_degree.17" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.022082" steps="97920"/></proof>
  </goal>
  <goal name="vc_count_degree.18" expl="for invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.022151" steps="70"/></proof>
  </goal>
  <goal name="vc_count_degree.19" expl="for invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.075614" steps="13832"/></proof>
  </goal>
  <goal name="vc_count_degree.20" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.022602" steps="89"/></proof>
  </goal>
  <goal name="vc_count_degree.21" proved="true">
  <proof prover="1"><result status="valid" time="0.142720" steps="11691"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_knights_tour__qyi4580598960913230815__set" proved="true">
 <goal name="vc_set" proved="true">
 <proof prover="1"><result status="valid" time="0.107416" steps="22640"/></proof>
 </goal>
</theory>
<theory name="M_06_knights_tour__min" proved="true">
 <goal name="vc_min" proved="true">
 <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
  <goal name="vc_min.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_min.0.0" expl="into_iter &#39;self&#39; type invariant" proved="true">
   <proof prover="4"><result status="valid" time="0.016565" steps="3"/></proof>
   </goal>
   <goal name="vc_min.0.1" expl="into_iter requires" proved="true">
   <proof prover="4"><result status="valid" time="0.015896" steps="2"/></proof>
   </goal>
   <goal name="vc_min.0.2" expl="for invariant" proved="true">
   <proof prover="1" timelimit="5"><result status="valid" time="0.027732" steps="8238"/></proof>
   </goal>
   <goal name="vc_min.0.3" expl="for invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.133446" steps="8243"/></proof>
   </goal>
   <goal name="vc_min.0.4" expl="for invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.028150" steps="8379"/></proof>
   </goal>
   <goal name="vc_min.0.5" expl="min ensures" proved="true">
   <proof prover="4"><result status="valid" time="0.020839" steps="65"/></proof>
   </goal>
   <goal name="vc_min.0.6" expl="for invariant" proved="true">
   <proof prover="4" timelimit="5"><result status="valid" time="0.019544" steps="28"/></proof>
   </goal>
   <goal name="vc_min.0.7" expl="for invariant" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.020000" steps="103386"/></proof>
   </goal>
   <goal name="vc_min.0.8" expl="for invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.078365" steps="15364"/></proof>
   </goal>
   <goal name="vc_min.0.9" expl="loop invariant" proved="true">
   <proof prover="4" timelimit="5"><result status="valid" time="0.135535" steps="2982"/></proof>
   </goal>
   <goal name="vc_min.0.10" expl="for invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.165730" steps="21948"/></proof>
   </goal>
   <goal name="vc_min.0.11" expl="for invariant" proved="true">
   <proof prover="4"><result status="valid" time="0.021156" steps="40"/></proof>
   </goal>
   <goal name="vc_min.0.12" expl="for invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.040262" steps="15655"/></proof>
   </goal>
   <goal name="vc_min.0.13" expl="loop invariant" proved="true">
   <proof prover="4" timelimit="5"><result status="valid" time="0.019105" steps="197"/></proof>
   </goal>
   <goal name="vc_min.0.14" expl="for invariant" proved="true">
   <proof prover="1" timelimit="5"><result status="valid" time="0.035936" steps="14261"/></proof>
   </goal>
   <goal name="vc_min.0.15" expl="for invariant" proved="true">
   <proof prover="4"><result status="valid" time="0.020358" steps="40"/></proof>
   </goal>
   <goal name="vc_min.0.16" expl="for invariant" proved="true">
   <proof prover="1"><result status="valid" time="0.135505" steps="15659"/></proof>
   </goal>
   <goal name="vc_min.0.17" expl="loop invariant" proved="true">
   <proof prover="4" timelimit="5"><result status="valid" time="0.322414" steps="7160"/></proof>
   </goal>
   <goal name="vc_min.0.18" proved="true">
   <proof prover="1"><result status="valid" time="0.038910" steps="12654"/></proof>
   </goal>
   <goal name="vc_min.0.19" proved="true">
   <proof prover="1"><result status="valid" time="0.043536" steps="12497"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_knights_tour__dumb_nonlinear_arith" proved="true">
 <goal name="vc_dumb_nonlinear_arith" proved="true">
 <proof prover="4"><result status="valid" time="0.012743" steps="4"/></proof>
 </goal>
</theory>
<theory name="M_06_knights_tour__knights_tour" proved="true">
 <goal name="vc_knights_tour" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_knights_tour.0" expl="new requires" proved="true">
  <proof prover="1"><result status="valid" time="0.024890" steps="8462"/></proof>
  <proof prover="4" timelimit="5"><result status="valid" time="0.042943" steps="8"/></proof>
  </goal>
  <goal name="vc_knights_tour.1" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.019753" steps="31"/></proof>
  </goal>
  <goal name="vc_knights_tour.2" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.019798" steps="34"/></proof>
  </goal>
  <goal name="vc_knights_tour.3" expl="set requires #0" proved="true">
  <proof prover="4"><result status="valid" time="0.032201" steps="17"/></proof>
  </goal>
  <goal name="vc_knights_tour.4" expl="set requires #1" proved="true">
  <proof prover="4"><result status="valid" time="0.025708" steps="214"/></proof>
  </goal>
  <goal name="vc_knights_tour.5" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.020658" steps="43"/></proof>
  </goal>
  <goal name="vc_knights_tour.6" expl="into_iter &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.021729" steps="133"/></proof>
  </goal>
  <goal name="vc_knights_tour.7" expl="into_iter requires" proved="true">
  <proof prover="4"><result status="valid" time="0.019183" steps="41"/></proof>
  </goal>
  <goal name="vc_knights_tour.8" expl="for invariant" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.080026" steps="10497"/></proof>
  </goal>
  <goal name="vc_knights_tour.9" expl="for invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.025832" steps="51"/></proof>
  </goal>
  <goal name="vc_knights_tour.10" expl="for invariant" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.031834" steps="192"/></proof>
  </goal>
  <goal name="vc_knights_tour.11" expl="loop invariant #0" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.020728" steps="56"/></proof>
  </goal>
  <goal name="vc_knights_tour.12" expl="loop invariant #1" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.021887" steps="9185"/></proof>
  </goal>
  <goal name="vc_knights_tour.13" expl="loop invariant #2" proved="true">
  <proof prover="4"><result status="valid" time="0.034441" steps="1338"/></proof>
  </goal>
  <goal name="vc_knights_tour.14" expl="next &#39;self&#39; type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.036381" steps="11380"/></proof>
  </goal>
  <goal name="vc_knights_tour.15" expl="into_iter &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.023910" steps="282"/></proof>
  </goal>
  <goal name="vc_knights_tour.16" expl="into_iter requires" proved="true">
  <proof prover="4"><result status="valid" time="0.030738" steps="131"/></proof>
  </goal>
  <goal name="vc_knights_tour.17" expl="for invariant" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.055860" steps="19709"/></proof>
  </goal>
  <goal name="vc_knights_tour.18" expl="for invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.024969" steps="140"/></proof>
  </goal>
  <goal name="vc_knights_tour.19" expl="for invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.164186" steps="1128"/></proof>
  </goal>
  <goal name="vc_knights_tour.20" expl="loop invariant" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.039699" steps="16811"/></proof>
  </goal>
  <goal name="vc_knights_tour.21" expl="next &#39;self&#39; type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.073276" steps="20686"/></proof>
  </goal>
  <goal name="vc_knights_tour.22" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.018390" steps="2185"/></proof>
  </goal>
  <goal name="vc_knights_tour.23" expl="mov requires #0" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.025322" steps="586"/></proof>
  </goal>
  <goal name="vc_knights_tour.24" expl="mov requires #1" proved="true">
  <proof prover="4"><result status="valid" time="0.046729" steps="611"/></proof>
  </goal>
  <goal name="vc_knights_tour.25" expl="mov requires #2" proved="true">
  <proof prover="4"><result status="valid" time="0.426684" steps="4963"/></proof>
  </goal>
  <goal name="vc_knights_tour.26" expl="mov requires #3" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.283490" steps="5082"/></proof>
  </goal>
  <goal name="vc_knights_tour.27" expl="available requires" proved="true">
  <proof prover="1"><result status="valid" time="0.028094" steps="16665"/></proof>
  </goal>
  <goal name="vc_knights_tour.28" expl="for invariant" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.160168" steps="21205"/></proof>
  </goal>
  <goal name="vc_knights_tour.29" expl="for invariant" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.057049" steps="21208"/></proof>
  </goal>
  <goal name="vc_knights_tour.30" expl="for invariant" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.117821" steps="1972"/></proof>
  </goal>
  <goal name="vc_knights_tour.31" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.083415" steps="28338"/></proof>
  </goal>
  <goal name="vc_knights_tour.32" expl="count_degree requires #0" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.034541" steps="213"/></proof>
  </goal>
  <goal name="vc_knights_tour.33" expl="count_degree requires #1" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.035440" steps="213"/></proof>
  </goal>
  <goal name="vc_knights_tour.34" expl="push &#39;self&#39; type invariant" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.027339" steps="562"/></proof>
  </goal>
  <goal name="vc_knights_tour.35" expl="push &#39;value&#39; type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.087989" steps="21299"/></proof>
  <proof prover="4"><result status="valid" time="0.026616" steps="571"/></proof>
  </goal>
  <goal name="vc_knights_tour.36" expl="for invariant" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.038049" steps="592"/></proof>
  </goal>
  <goal name="vc_knights_tour.37" expl="for invariant" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.078069" steps="599"/></proof>
  </goal>
  <goal name="vc_knights_tour.38" expl="for invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.221835" steps="2926"/></proof>
  </goal>
  <goal name="vc_knights_tour.39" expl="loop invariant" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.049890" steps="37855"/></proof>
  </goal>
  <goal name="vc_knights_tour.40" proved="true">
  <proof prover="1"><result status="valid" time="0.047231" steps="17299"/></proof>
  </goal>
  <goal name="vc_knights_tour.41" proved="true">
  <proof prover="1"><result status="valid" time="0.038525" steps="10435"/></proof>
  </goal>
  <goal name="vc_knights_tour.42" expl="set requires #0" proved="true">
  <proof prover="4"><result status="valid" time="0.025514" steps="257"/></proof>
  </goal>
  <goal name="vc_knights_tour.43" expl="set requires #1" proved="true">
  <proof prover="4"><result status="valid" time="0.029836" steps="1586"/></proof>
  </goal>
  <goal name="vc_knights_tour.44" expl="for invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.058617" steps="21730"/></proof>
  </goal>
  <goal name="vc_knights_tour.45" expl="for invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.067339" steps="21738"/></proof>
  </goal>
  <goal name="vc_knights_tour.46" expl="for invariant" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.072750" steps="1706"/></proof>
  </goal>
  <goal name="vc_knights_tour.47" expl="loop invariant #0" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.037702" steps="284"/></proof>
  </goal>
  <goal name="vc_knights_tour.48" expl="loop invariant #1" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.084407" steps="284"/></proof>
  </goal>
  <goal name="vc_knights_tour.49" expl="loop invariant #2" proved="true">
  <proof prover="4"><result status="valid" time="0.679406" steps="10831"/></proof>
  </goal>
  <goal name="vc_knights_tour.50" proved="true">
  <proof prover="1"><result status="valid" time="0.057128" steps="17763"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
