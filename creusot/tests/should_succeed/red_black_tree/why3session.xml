<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="3" steplimit="0" memlimit="2000"/>
<prover id="2" name="CVC5" version="1.0.5" timelimit="5" steplimit="0" memlimit="2000"/>
<prover id="3" name="Alt-Ergo" version="2.6.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="6" name="Z3" version="4.12.4" timelimit="0.5" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="red_black_tree.coma"/>
<theory name="M_red_black_tree__qyi11959472507597060150__clone__refines" proved="true">
 <goal name="refines" proved="true">
 <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.039379" steps="6"/></proof>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi11959472507597060150__clone" proved="true">
 <goal name="vc_clone&#39;0" proved="true">
 <proof prover="2"><result status="valid" time="0.044748" steps="68"/></proof>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi2476155906044564626__model_acc_has_mapping" proved="true">
 <goal name="vc_model_acc_has_mapping&#39;0" proved="true">
 <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.024231" steps="231"/></proof>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi2476155906044564626__has_mapping_model_acc" proved="true">
 <goal name="vc_has_mapping_model_acc&#39;0" proved="true">
 <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.088086" steps="687"/></proof>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi2476155906044564626__has_mapping_model" proved="true">
 <goal name="vc_has_mapping_model&#39;0" proved="true">
 <proof prover="6"><result status="valid" time="0.165500" steps="261703"/></proof>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi2476155906044564626__has_mapping_inj" proved="true">
 <goal name="vc_has_mapping_inj&#39;0" proved="true">
 <proof prover="2"><result status="valid" time="0.036474" steps="4745"/></proof>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi17561227306860881838__has_mapping" proved="true">
 <goal name="vc_has_mapping&#39;0" proved="true">
 <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.019356" steps="28"/></proof>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi14787627995992352676__resolve_coherence__refines" proved="true">
 <goal name="refines" proved="true">
 <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.033686" steps="4"/></proof>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi14787627995992352676__resolve_coherence" proved="true">
 <goal name="vc_resolve_coherence&#39;0" proved="true">
 <proof prover="2" memlimit="1000"><result status="valid" time="0.010695" steps="1566"/></proof>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi16896830124134315792__resolve_coherence__refines" proved="true">
 <goal name="refines" proved="true">
 <proof prover="2"><result status="valid" time="0.041073" steps="2194"/></proof>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi16896830124134315792__resolve_coherence" proved="true">
 <goal name="vc_resolve_coherence&#39;0" proved="true">
 <proof prover="6" timelimit="5"><result status="valid" time="0.010082" steps="3269"/></proof>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi2476155906044564626__height" proved="true">
 <goal name="vc_height&#39;0" proved="true">
 <proof prover="6"><result status="valid" time="0.016473" steps="484"/></proof>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi17561227306860881838__height" proved="true">
 <goal name="vc_height&#39;0" proved="true">
 <proof prover="2" memlimit="1000"><result status="valid" time="0.014492" steps="1254"/></proof>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi2476155906044564626__is_red" proved="true">
 <goal name="vc_is_red&#39;0" proved="true">
 <proof prover="6"><result status="valid" time="0.018939" steps="3676"/></proof>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi17561227306860881838__rotate_right" proved="true">
 <goal name="vc_rotate_right&#39;0" proved="true">
 <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="2.914267" steps="156194"/></proof>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi17561227306860881838__rotate_left" proved="true">
 <goal name="vc_rotate_left&#39;0" proved="true">
 <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="2.978679" steps="157165"/></proof>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi17561227306860881838__flip_colors" proved="true">
 <goal name="vc_flip_colors&#39;0" proved="true">
 <proof prover="2" memlimit="1000"><result status="valid" time="2.882268" steps="174820"/></proof>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi17561227306860881838__balance" proved="true">
 <goal name="vc_balance&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_balance&#39;0.0" expl="is_red &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.061048" steps="9857"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.1" expl="is_red &#39;self&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.030258" steps="9786"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.2" proved="true">
  <proof prover="0"><result status="valid" time="0.129981" steps="9639"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.3" expl="rotate_left &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.021245" steps="9827"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.4" expl="rotate_left requires #0" proved="true">
  <proof prover="2"><result status="valid" time="0.074015" steps="3059"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.5" expl="rotate_left requires #1" proved="true">
  <proof prover="0"><result status="valid" time="0.022176" steps="8760"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.6" expl="is_red &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.087993" steps="12006"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.7" expl="as_ref &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.185069" steps="18300"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.8" expl="unwrap &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.059096" steps="4407"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.9" expl="unwrap requires" proved="true">
  <proof prover="2"><result status="valid" time="0.018540" steps="8469"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.10" expl="is_red &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.167096" steps="16281"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.11" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.075199" steps="167"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.12" expl="rotate_right &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.066055" steps="13028"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.13" expl="rotate_right requires #0" proved="true">
  <proof prover="2"><result status="valid" time="0.114758" steps="4962"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.14" expl="rotate_right requires #1" proved="true">
  <proof prover="2"><result status="valid" time="0.108525" steps="4467"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.15" expl="is_red &#39;self&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.217473" steps="23394"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.16" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.147863" steps="7713"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.17" expl="balance ensures #0" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.417594" steps="2738"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.18" expl="balance ensures #1" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.014555" steps="385"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.19" expl="balance ensures #2" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.032870" steps="359"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.20" expl="balance ensures #3" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.260490" steps="1384"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.21" expl="balance ensures #4" proved="true">
  <proof prover="2"><result status="valid" time="0.193813" steps="19917"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.22" expl="balance ensures #5" proved="true">
  <proof prover="2"><result status="valid" time="0.076996" steps="18876"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.23" expl="balance ensures #6" proved="true">
  <proof prover="0"><result status="valid" time="0.076079" steps="19905"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.24" expl="balance ensures #7" proved="true">
  <proof prover="2"><result status="valid" time="0.180578" steps="19163"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.25" expl="is_red &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.193159" steps="19811"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.26" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.189667" steps="20784"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.27" expl="balance ensures #0" proved="true">
  <proof prover="2"><result status="valid" time="0.314695" steps="20474"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.28" expl="balance ensures #1" proved="true">
  <proof prover="2"><result status="valid" time="0.027258" steps="10769"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.29" expl="balance ensures #2" proved="true">
  <proof prover="2"><result status="valid" time="0.037710" steps="10804"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.30" expl="balance ensures #3" proved="true">
  <proof prover="0"><result status="valid" time="0.119617" steps="14407"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.31" expl="balance ensures #4" proved="true">
  <proof prover="2"><result status="valid" time="0.243452" steps="30887"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.32" expl="balance ensures #5" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="2.683326" steps="19329"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.33" expl="balance ensures #6" proved="true">
  <proof prover="0"><result status="valid" time="0.121456" steps="25172"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.34" expl="balance ensures #7" proved="true">
  <proof prover="2"><result status="valid" time="0.177702" steps="24651"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.35" proved="true">
  <proof prover="0"><result status="valid" time="0.081928" steps="17917"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.36" expl="flip_colors &#39;self&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.076872" steps="17618"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.37" expl="flip_colors requires #0" proved="true">
  <proof prover="2"><result status="valid" time="0.032512" steps="7807"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.38" expl="flip_colors requires #1" proved="true">
  <proof prover="0"><result status="valid" time="0.150378" steps="14333"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.39" expl="flip_colors requires #2" proved="true">
  <proof prover="2"><result status="valid" time="0.047171" steps="12308"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.40" expl="flip_colors requires #3" proved="true">
  <proof prover="2"><result status="valid" time="0.113774" steps="6795"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.41" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.166997" steps="22522"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.42" expl="balance ensures #0" proved="true">
  <proof prover="2"><result status="valid" time="0.763496" steps="45230"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.43" expl="balance ensures #1" proved="true">
  <proof prover="2"><result status="valid" time="0.030147" steps="11360"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.44" expl="balance ensures #2" proved="true">
  <proof prover="2"><result status="valid" time="0.066362" steps="11446"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.45" expl="balance ensures #3" proved="true">
  <proof prover="2"><result status="valid" time="0.235981" steps="22976"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.46" expl="balance ensures #4" proved="true">
  <proof prover="2"><result status="valid" time="0.598513" steps="41618"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.47" expl="balance ensures #5" proved="true">
  <proof prover="2"><result status="valid" time="0.343263" steps="29208"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.48" expl="balance ensures #6" proved="true">
  <proof prover="2"><result status="valid" time="0.302832" steps="27383"/></proof>
  </goal>
  <goal name="vc_balance&#39;0.49" expl="balance ensures #7" proved="true">
  <proof prover="2"><result status="valid" time="0.350016" steps="29388"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi17561227306860881838__move_red_left" proved="true">
 <goal name="vc_move_red_left&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_move_red_left&#39;0.0" proved="true">
  <proof prover="0"><result status="valid" time="0.046276" steps="11162"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.1" expl="flip_colors &#39;self&#39; type invariant" proved="true">
  <proof prover="6"><result status="valid" time="0.070440" steps="27664"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.2" expl="flip_colors requires #0" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.027084" steps="26"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.3" expl="flip_colors requires #1" proved="true">
  <proof prover="0"><result status="valid" time="0.122967" steps="12960"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.4" expl="flip_colors requires #2" proved="true">
  <proof prover="2"><result status="valid" time="0.054885" steps="4076"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.5" expl="flip_colors requires #3" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.039192" steps="223"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.6" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.135688" steps="713"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.7" expl="as_mut &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.158069" steps="18361"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.8" expl="unwrap &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.100329" steps="4495"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.9" expl="unwrap requires" proved="true">
  <proof prover="0"><result status="valid" time="0.032004" steps="11641"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.10" expl="is_red &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.198346" steps="20758"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.11" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.021740" steps="4537"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.12" expl="move_red_left result type invariant" proved="true">
  <proof prover="6" timelimit="5"><result status="valid" time="0.021420" steps="54101"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.13" expl="move_red_left ensures #0" proved="true">
  <proof prover="2"><result status="valid" time="0.028694" steps="10173"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.14" expl="move_red_left ensures #1" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="0.073510" steps="10961"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.15" expl="move_red_left ensures #2" proved="true">
  <proof prover="0"><result status="valid" time="0.089612" steps="15866"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.16" expl="move_red_left ensures #3" proved="true">
  <proof prover="0"><result status="valid" time="0.024544" steps="11001"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.17" expl="move_red_left ensures #4" proved="true">
  <proof prover="6"><result status="valid" time="0.069518" steps="69648"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.18" expl="move_red_left ensures #5" proved="true">
  <proof prover="0"><result status="valid" time="0.050988" steps="16149"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.19" expl="move_red_left ensures #6" proved="true">
  <proof prover="0"><result status="valid" time="0.056866" steps="16403"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.20" expl="move_red_left ensures #7" proved="true">
  <proof prover="2"><result status="valid" time="0.522902" steps="37479"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.21" expl="move_red_left ensures #8" proved="true">
  <proof prover="2"><result status="valid" time="0.043709" steps="4879"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.22" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.029238" steps="80"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.23" expl="as_mut &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.187968" steps="19814"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.24" expl="unwrap &#39;self&#39; type invariant" proved="true">
  <proof prover="6"><result status="valid" time="0.069699" steps="3179"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.25" expl="unwrap requires" proved="true">
  <proof prover="2"><result status="valid" time="0.037319" steps="4996"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.26" proved="true">
  <proof prover="2"><result status="valid" time="0.181504" steps="22238"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.27" expl="rotate_right &#39;self&#39; type invariant" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.016654" steps="98"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.28" expl="rotate_right requires #0" proved="true">
  <proof prover="2"><result status="valid" time="0.208487" steps="21540"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.29" expl="rotate_right requires #1" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.082366" steps="684"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.30" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.275684" steps="26195"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.31" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.369899" steps="2074"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.32" expl="rotate_left &#39;self&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.144561" steps="20793"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.33" expl="rotate_left requires #0" proved="true">
  <proof prover="2"><result status="valid" time="1.432108" steps="68647"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.34" expl="rotate_left requires #1" proved="true">
  <proof prover="2"><result status="valid" time="0.176806" steps="25240"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.35" proved="true">
  <proof prover="6"><result status="valid" time="0.040025" steps="3621"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.36" expl="flip_colors &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.311414" steps="27789"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.37" expl="flip_colors requires #0" proved="true">
  <proof prover="2"><result status="valid" time="0.105529" steps="5155"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.38" expl="flip_colors requires #1" proved="true">
  <proof prover="6"><result status="valid" time="0.022218" steps="5256"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.39" expl="flip_colors requires #2" proved="true">
  <proof prover="6"><result status="valid" time="0.074470" steps="60988"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.40" expl="flip_colors requires #3" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.245291" steps="1231"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.41" proved="true">
  <proof prover="6"><result status="valid" time="0.067798" steps="96468"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.42" expl="as_mut &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.372024" steps="30548"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.43" expl="unwrap &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.027736" steps="5542"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.44" expl="unwrap requires" proved="true">
  <proof prover="6"><result status="valid" time="0.051211" steps="6028"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.45" proved="true">
  <proof prover="6"><result status="valid" time="0.044892" steps="85606"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.46" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.515119" steps="38125"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.47" expl="type invariant" proved="true">
  <proof prover="6"><result status="valid" time="0.097329" steps="149654"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.48" expl="move_red_left result type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.458040" steps="33321"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.49" expl="move_red_left ensures #0" proved="true">
  <proof prover="2"><result status="valid" time="0.478999" steps="35149"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.50" expl="move_red_left ensures #1" proved="true">
  <proof prover="0"><result status="valid" time="2.573496" steps="116687"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.51" expl="move_red_left ensures #2" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="0.166682" steps="28462"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.52" expl="move_red_left ensures #3" proved="true">
  <proof prover="0"><result status="valid" time="0.194946" steps="25654"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.53" expl="move_red_left ensures #4" proved="true">
  <proof prover="6" timelimit="5"><result status="valid" time="0.503586" steps="577061"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.54" expl="move_red_left ensures #5" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="1.900008" steps="90661"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.55" expl="move_red_left ensures #6" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_move_red_left&#39;0.55.0" expl="move_red_left ensures #6" proved="true">
   <proof prover="6" timelimit="5"><result status="valid" time="2.712547" steps="4636315"/></proof>
   </goal>
   <goal name="vc_move_red_left&#39;0.55.1" expl="move_red_left ensures #6" proved="true">
   <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="1.062079" steps="84173"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_move_red_left&#39;0.56" expl="move_red_left ensures #7" proved="true">
  <proof prover="2"><result status="valid" time="1.514996" steps="69974"/></proof>
  </goal>
  <goal name="vc_move_red_left&#39;0.57" expl="move_red_left ensures #8" proved="true">
  <proof prover="2" memlimit="1000"><result status="valid" time="0.703962" steps="44262"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi17561227306860881838__move_red_right" proved="true">
 <goal name="vc_move_red_right&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_move_red_right&#39;0.0" proved="true">
  <proof prover="6"><result status="valid" time="0.053071" steps="24322"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.1" expl="flip_colors &#39;self&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.039175" steps="11672"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.2" expl="flip_colors requires #0" proved="true">
  <proof prover="2"><result status="valid" time="0.064528" steps="4058"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.3" expl="flip_colors requires #1" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.064787" steps="26"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.4" expl="flip_colors requires #2" proved="true">
  <proof prover="0"><result status="valid" time="0.113765" steps="12959"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.5" expl="flip_colors requires #3" proved="true">
  <proof prover="2"><result status="valid" time="0.217116" steps="20655"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.6" proved="true">
  <proof prover="2"><result status="valid" time="0.187479" steps="19412"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.7" expl="as_mut &#39;self&#39; type invariant" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.040638" steps="70"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.8" expl="unwrap &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.025139" steps="4495"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.9" expl="unwrap requires" proved="true">
  <proof prover="6"><result status="valid" time="0.038165" steps="4240"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.10" expl="is_red &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.196159" steps="20803"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.11" expl="type invariant" proved="true">
  <proof prover="6"><result status="valid" time="0.011916" steps="3056"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.12" expl="move_red_right result type invariant" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="0.084092" steps="16517"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.13" expl="move_red_right ensures #0" proved="true">
  <proof prover="0"><result status="valid" time="0.050851" steps="15449"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.14" expl="move_red_right ensures #1" proved="true">
  <proof prover="2"><result status="valid" time="0.038790" steps="4654"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.15" expl="move_red_right ensures #2" proved="true">
  <proof prover="0"><result status="valid" time="0.108234" steps="15861"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.16" expl="move_red_right ensures #3" proved="true">
  <proof prover="2"><result status="valid" time="0.021786" steps="4688"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.17" expl="move_red_right ensures #4" proved="true">
  <proof prover="6"><result status="valid" time="0.098959" steps="69680"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.18" expl="move_red_right ensures #5" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="0.079778" steps="16152"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.19" expl="move_red_right ensures #6" proved="true">
  <proof prover="2"><result status="valid" time="0.030768" steps="12909"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.20" expl="move_red_right ensures #7" proved="true">
  <proof prover="2"><result status="valid" time="0.554225" steps="37677"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.21" expl="move_red_right ensures #8" proved="true">
  <proof prover="2"><result status="valid" time="0.044297" steps="4884"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.22" proved="true">
  <proof prover="2"><result status="valid" time="0.035087" steps="8608"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.23" expl="rotate_right &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.199060" steps="20457"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.24" expl="rotate_right requires #0" proved="true">
  <proof prover="2"><result status="valid" time="0.033408" steps="8641"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.25" expl="rotate_right requires #1" proved="true">
  <proof prover="2"><result status="valid" time="0.203389" steps="20586"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.26" proved="true">
  <proof prover="2"><result status="valid" time="0.054913" steps="4778"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.27" expl="flip_colors &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.147910" steps="22552"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.28" expl="flip_colors requires #0" proved="true">
  <proof prover="2"><result status="valid" time="0.018576" steps="4796"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.29" expl="flip_colors requires #1" proved="true">
  <proof prover="2"><result status="valid" time="0.045424" steps="10340"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.30" expl="flip_colors requires #2" proved="true">
  <proof prover="0"><result status="valid" time="0.056085" steps="12401"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.31" expl="flip_colors requires #3" proved="true">
  <proof prover="2"><result status="valid" time="0.035933" steps="8984"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.32" proved="true">
  <proof prover="6"><result status="valid" time="0.066326" steps="85757"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.33" expl="as_mut &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.301407" steps="26249"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.34" expl="unwrap &#39;self&#39; type invariant" proved="true">
  <proof prover="6"><result status="valid" time="0.045407" steps="3688"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.35" expl="unwrap requires" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.195791" steps="766"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.36" proved="true">
  <proof prover="2"><result status="valid" time="0.307194" steps="30851"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.37" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.332163" steps="30176"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.38" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="1.167306" steps="57174"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.39" expl="move_red_right result type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.376153" steps="28949"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.40" expl="move_red_right ensures #0" proved="true">
  <proof prover="0"><result status="valid" time="0.207198" steps="28363"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.41" expl="move_red_right ensures #1" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="1.195948" steps="134355"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.42" expl="move_red_right ensures #2" proved="true">
  <proof prover="2"><result status="valid" time="0.424448" steps="30413"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.43" expl="move_red_right ensures #3" proved="true">
  <proof prover="2"><result status="valid" time="0.033658" steps="6293"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.44" expl="move_red_right ensures #4" proved="true">
  <proof prover="2"><result status="valid" time="1.801280" steps="68984"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.45" expl="move_red_right ensures #5" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="0.932648" steps="61475"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.46" expl="move_red_right ensures #6" proved="true">
  <proof prover="0"><result status="valid" time="4.149147" steps="135668"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.47" expl="move_red_right ensures #7" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="0.719515" steps="51610"/></proof>
  </goal>
  <goal name="vc_move_red_right&#39;0.48" expl="move_red_right ensures #8" proved="true">
  <proof prover="2" memlimit="1000"><result status="valid" time="0.206301" steps="35468"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi2476155906044564626__insert_rec" proved="true">
 <goal name="vc_insert_rec&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_insert_rec&#39;0.0" proved="true">
  <proof prover="2"><result status="valid" time="0.116004" steps="11402"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.1" expl="type invariant" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.019084" steps="28"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.2" expl="type invariant" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.018348" steps="30"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.3" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.184423" steps="17615"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.4" expl="insert_rec ensures #0" proved="true">
  <proof prover="2"><result status="valid" time="0.155016" steps="12869"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.5" expl="insert_rec ensures #1" proved="true">
  <proof prover="2"><result status="valid" time="0.185121" steps="12853"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.6" expl="insert_rec ensures #2" proved="true">
  <proof prover="2"><result status="valid" time="0.248652" steps="14163"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.7" expl="insert_rec ensures #3" proved="true">
  <proof prover="2"><result status="valid" time="0.128206" steps="14345"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.8" expl="insert_rec ensures #4" proved="true">
  <proof prover="2"><result status="valid" time="0.070862" steps="9156"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.9" proved="true">
  <proof prover="2"><result status="valid" time="0.074675" steps="11554"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.10" expl="cmp &#39;self&#39; type invariant" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.027233" steps="34"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.11" expl="cmp &#39;other&#39; type invariant" proved="true">
  <proof prover="6"><result status="valid" time="0.031249" steps="30101"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.12" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.034667" steps="166"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.13" expl="insert_rec &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.122193" steps="12578"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.14" expl="insert_rec &#39;key&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.029194" steps="8823"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.15" expl="insert_rec &#39;val&#39; type invariant" proved="true">
  <proof prover="6"><result status="valid" time="0.058489" steps="2455"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.16" expl="insert_rec requires #0" proved="true">
  <proof prover="0"><result status="valid" time="0.066317" steps="10866"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.17" expl="insert_rec requires #1" proved="true">
  <proof prover="2"><result status="valid" time="0.036492" steps="12796"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.18" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.020092" steps="3323"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.19" expl="type invariant" proved="true">
  <proof prover="6"><result status="valid" time="0.048864" steps="30518"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.20" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.158631" steps="15255"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.21" expl="type invariant" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.041824" steps="241"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.22" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.057341" steps="13167"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.23" expl="insert_rec ensures #0" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.080773" steps="691"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.24" expl="insert_rec ensures #1" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.052725" steps="13346"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.25" expl="insert_rec ensures #2" proved="true">
  <proof prover="2"><result status="valid" time="0.058312" steps="14165"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.26" expl="insert_rec ensures #3" proved="true">
  <proof prover="0"><result status="valid" time="0.037000" steps="13107"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.27" expl="insert_rec ensures #4" proved="true">
  <proof prover="2"><result status="valid" time="0.054569" steps="15005"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.28" proved="true">
  <proof prover="2"><result status="valid" time="0.091351" steps="13029"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.29" expl="insert_rec &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.018825" steps="12551"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.30" expl="insert_rec &#39;key&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.019369" steps="3348"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.31" expl="insert_rec &#39;val&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.030544" steps="3349"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.32" expl="insert_rec requires #0" proved="true">
  <proof prover="2"><result status="valid" time="0.061291" steps="12697"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.33" expl="insert_rec requires #1" proved="true">
  <proof prover="2"><result status="valid" time="0.056223" steps="12747"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.34" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.010796" steps="6319"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.35" proved="true">
  <proof prover="0"><result status="valid" time="0.063933" steps="16921"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.36" expl="balance &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.140084" steps="14220"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.37" expl="balance requires #0" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="0.766262" steps="61105"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.38" expl="balance requires #1" proved="true">
  <proof prover="2" memlimit="1000"><result status="valid" time="0.053016" steps="15817"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.39" expl="balance requires #2" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.187877" steps="1845"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.40" expl="balance requires #3" proved="true">
  <proof prover="2"><result status="valid" time="0.069218" steps="15911"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.41" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.169116" steps="20037"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.42" expl="type invariant" proved="true">
  <proof prover="6"><result status="valid" time="0.057890" steps="83278"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.43" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.209906" steps="25710"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.44" expl="insert_rec ensures #0" proved="true">
  <proof prover="2"><result status="valid" time="0.338172" steps="26192"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.45" expl="insert_rec ensures #1" proved="true">
  <proof prover="2"><result status="valid" time="0.248793" steps="21621"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.46" expl="insert_rec ensures #2" proved="true">
  <proof prover="0"><result status="valid" time="0.395804" steps="32890"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.47" expl="insert_rec ensures #3" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="1.233162" steps="8449"/></proof>
  </goal>
  <goal name="vc_insert_rec&#39;0.48" expl="insert_rec ensures #4" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="0.215582" steps="44850"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi2476155906044564626__delete_max_rec" proved="true">
 <goal name="vc_delete_max_rec&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_delete_max_rec&#39;0.0" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.038176" steps="130"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.1" expl="as_mut &#39;self&#39; type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.075066" steps="13356"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.2" expl="unwrap &#39;self&#39; type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.052615" steps="4769"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.3" expl="unwrap requires" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.114867" steps="12301"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.4" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.083317" steps="84"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.5" expl="as_mut &#39;self&#39; type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.156954" steps="13282"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.6" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.133503" steps="13603"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.7" expl="is_red &#39;self&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.122163" steps="15309"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.8" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.028425" steps="49"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.9" expl="rotate_right &#39;self&#39; type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.084763" steps="15087"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.10" expl="rotate_right requires #0" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.153961" steps="16076"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.11" expl="rotate_right requires #1" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.050566" steps="5005"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.12" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.031035" steps="6229"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.13" proved="true">
  <proof prover="2"><result status="valid" time="0.038110" steps="6108"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.14" proved="true">
  <proof prover="2"><result status="valid" time="0.079713" steps="5627"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.15" expl="take &#39;dest&#39; type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.130025" steps="17488"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.16" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.177612" steps="17513"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.17" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.192257" steps="19091"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.18" expl="unwrap &#39;self&#39; type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.026502" steps="5738"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.19" expl="unwrap requires" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.032064" steps="6215"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.20" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.053359" steps="13566"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.21" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.060965" steps="13819"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.22" expl="delete_max_rec result type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.095968" steps="19134"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.23" expl="delete_max_rec ensures #0" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.082731" steps="11340"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.24" expl="delete_max_rec ensures #1" proved="true">
  <proof prover="2" memlimit="1000"><result status="valid" time="0.135504" steps="20414"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.25" expl="delete_max_rec ensures #2" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.118807" steps="19232"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.26" expl="delete_max_rec ensures #3" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.314226" steps="28115"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.27" expl="delete_max_rec ensures #4" proved="true">
  <proof prover="2"><result status="valid" time="0.454705" steps="34992"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.28" expl="delete_max_rec ensures #5" proved="true">
  <proof prover="0"><result status="valid" time="0.157846" steps="18383"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.29" expl="delete_max_rec ensures #6" proved="true">
  <proof prover="0"><result status="valid" time="0.155187" steps="18828"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.30" expl="is_red &#39;self&#39; type invariant" proved="true">
  <proof prover="2" memlimit="1000"><result status="valid" time="0.188494" steps="19835"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.31" expl="as_ref &#39;self&#39; type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.162314" steps="19907"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.32" expl="unwrap &#39;self&#39; type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.037751" steps="5687"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.33" expl="unwrap requires" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.022758" steps="6088"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.34" expl="is_red &#39;self&#39; type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.191733" steps="26820"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.35" proved="true">
  <proof prover="2"><result status="valid" time="0.053840" steps="9999"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.36" expl="move_red_right &#39;self&#39; type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.094427" steps="19375"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.37" expl="move_red_right requires #0" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.403963" steps="30140"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.38" expl="move_red_right requires #1" proved="true">
  <proof prover="0"><result status="valid" time="0.218208" steps="20561"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.39" expl="move_red_right requires #2" proved="true">
  <proof prover="0"><result status="valid" time="0.357407" steps="29673"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.40" proved="true">
  <proof prover="2"><result status="valid" time="0.190898" steps="23126"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.41" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.221351" steps="24164"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.42" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.209296" steps="24533"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.43" proved="true">
  <proof prover="2"><result status="valid" time="0.265757" steps="33996"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.44" expl="delete_max_rec &#39;self&#39; type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.264741" steps="30330"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.45" expl="delete_max_rec requires #0" proved="true">
  <proof prover="2"><result status="valid" time="0.187396" steps="32026"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.46" expl="delete_max_rec requires #1" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.898846" steps="68851"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.47" proved="true">
  <proof prover="2"><result status="valid" time="0.309965" steps="31571"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.48" expl="balance &#39;self&#39; type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.180334" steps="30878"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.49" expl="balance requires #0" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.901547" steps="62930"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.50" expl="balance requires #1" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.215239" steps="33244"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.51" expl="balance requires #2" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.032850" steps="9757"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.52" expl="balance requires #3" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.275568" steps="33148"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.53" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.235765" steps="33483"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.54" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.447678" steps="39223"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.55" expl="delete_max_rec result type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.021891" steps="9843"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.56" expl="delete_max_rec ensures #0" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="1.511133" steps="71736"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.57" expl="delete_max_rec ensures #1" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.390273" steps="35709"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.58" expl="delete_max_rec ensures #2" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="1.393435" steps="75761"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.59" expl="delete_max_rec ensures #3" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="3.641257" steps="127819"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.60" expl="delete_max_rec ensures #4" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="2.129498" steps="88513"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.61" expl="delete_max_rec ensures #5" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="0.535394" steps="92383"/></proof>
  </goal>
  <goal name="vc_delete_max_rec&#39;0.62" expl="delete_max_rec ensures #6" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="2.420264" steps="91153"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi2476155906044564626__delete_min_rec" proved="true">
 <goal name="vc_delete_min_rec&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_delete_min_rec&#39;0.0" proved="true">
  <proof prover="2"><result status="valid" time="0.045428" steps="13917"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.1" expl="as_mut &#39;self&#39; type invariant" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.029089" steps="29"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.2" expl="unwrap &#39;self&#39; type invariant" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.018991" steps="24"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.3" expl="unwrap requires" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="0.036728" steps="13726"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.4" proved="true">
  <proof prover="2"><result status="valid" time="0.094228" steps="12961"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.5" expl="as_mut &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.033144" steps="13282"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.6" expl="type invariant" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.044397" steps="104"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.7" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.016971" steps="4877"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.8" proved="true">
  <proof prover="2"><result status="valid" time="0.071973" steps="4904"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.9" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.026171" steps="48"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.10" expl="take &#39;dest&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.092878" steps="14951"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.11" expl="type invariant" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.023225" steps="59"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.12" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.206591" steps="16921"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.13" expl="unwrap &#39;self&#39; type invariant" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.033825" steps="60"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.14" expl="unwrap requires" proved="true">
  <proof prover="2"><result status="valid" time="0.032856" steps="5083"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.15" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.139198" steps="16502"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.16" expl="type invariant" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.072938" steps="290"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.17" expl="delete_min_rec result type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.098895" steps="18103"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.18" expl="delete_min_rec ensures #0" proved="true">
  <proof prover="0"><result status="valid" time="0.171917" steps="16180"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.19" expl="delete_min_rec ensures #1" proved="true">
  <proof prover="2"><result status="valid" time="0.192990" steps="16555"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.20" expl="delete_min_rec ensures #2" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.142597" steps="657"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.21" expl="delete_min_rec ensures #3" proved="true">
  <proof prover="2" memlimit="1000"><result status="valid" time="0.225700" steps="21028"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.22" expl="delete_min_rec ensures #4" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.228103" steps="26874"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.23" expl="delete_min_rec ensures #5" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.069780" steps="8765"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.24" expl="delete_min_rec ensures #6" proved="true">
  <proof prover="2"><result status="valid" time="0.089084" steps="11592"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.25" expl="is_red &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.110515" steps="17555"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.26" expl="as_ref &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.156499" steps="21376"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.27" expl="unwrap &#39;self&#39; type invariant" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.060422" steps="48"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.28" expl="unwrap requires" proved="true">
  <proof prover="0"><result status="valid" time="0.085136" steps="12937"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.29" expl="is_red &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.253305" steps="22357"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.30" proved="true">
  <proof prover="2"><result status="valid" time="0.056943" steps="8602"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.31" expl="move_red_left &#39;self&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.153843" steps="15725"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.32" expl="move_red_left requires #0" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.288764" steps="24502"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.33" expl="move_red_left requires #1" proved="true">
  <proof prover="0"><result status="valid" time="0.079036" steps="16526"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.34" expl="move_red_left requires #2" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="1.681685" steps="10531"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.35" proved="true">
  <proof prover="2"><result status="valid" time="0.181014" steps="21287"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.36" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.187397" steps="21674"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.37" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.146775" steps="22692"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.38" proved="true">
  <proof prover="2"><result status="valid" time="0.070973" steps="17841"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.39" expl="delete_min_rec &#39;self&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.170517" steps="26832"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.40" expl="delete_min_rec requires #0" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.191877" steps="29700"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.41" expl="delete_min_rec requires #1" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="1.393715" steps="8622"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.42" proved="true">
  <proof prover="2"><result status="valid" time="0.314350" steps="29714"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.43" expl="balance &#39;self&#39; type invariant" proved="true">
  <proof prover="6"><result status="valid" time="0.042461" steps="83740"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.44" expl="balance requires #0" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="0.742009" steps="50651"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.45" expl="balance requires #1" proved="true">
  <proof prover="0"><result status="valid" time="0.061519" steps="17684"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.46" expl="balance requires #2" proved="true">
  <proof prover="2"><result status="valid" time="0.310632" steps="30985"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.47" expl="balance requires #3" proved="true">
  <proof prover="2"><result status="valid" time="0.245540" steps="30988"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.48" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.316784" steps="31596"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.49" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.485434" steps="38329"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.50" expl="delete_min_rec result type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.034552" steps="8997"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.51" expl="delete_min_rec ensures #0" proved="true">
  <proof prover="0"><result status="valid" time="0.547179" steps="46638"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.52" expl="delete_min_rec ensures #1" proved="true">
  <proof prover="0"><result status="valid" time="0.171859" steps="26849"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.53" expl="delete_min_rec ensures #2" proved="true">
  <proof prover="2"><result status="valid" time="0.800406" steps="54299"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.54" expl="delete_min_rec ensures #3" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="1.201466" steps="64783"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.55" expl="delete_min_rec ensures #4" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="1.548569" steps="72538"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.56" expl="delete_min_rec ensures #5" proved="true">
  <proof prover="2"><result status="valid" time="0.624732" steps="41569"/></proof>
  </goal>
  <goal name="vc_delete_min_rec&#39;0.57" expl="delete_min_rec ensures #6" proved="true">
  <proof prover="0"><result status="valid" time="0.317825" steps="33873"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi2476155906044564626__delete_rec" proved="true">
 <goal name="vc_delete_rec&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_delete_rec&#39;0.0" proved="true">
  <proof prover="3"><result status="valid" time="0.024110" steps="138"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.1" expl="as_mut &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.020536" steps="36"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.2" expl="unwrap &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.018585" steps="30"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.3" expl="unwrap requires" proved="true">
  <proof prover="3"><result status="valid" time="0.025529" steps="181"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.4" proved="true">
  <proof prover="3"><result status="valid" time="0.021971" steps="92"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.5" expl="as_mut &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.021272" steps="45"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.6" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.022870" steps="112"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.7" expl="cmp &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.019358" steps="48"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.8" expl="cmp &#39;other&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.207816" steps="919"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.9" expl="is_none &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.961967" steps="5018"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.10" expl="is_red &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.379816" steps="1812"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.11" expl="as_ref &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.288716" steps="1428"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.12" expl="unwrap &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.034709" steps="66"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.13" expl="unwrap requires" proved="true">
  <proof prover="3"><result status="valid" time="0.052477" steps="71"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.14" expl="is_red &#39;self&#39; type invariant" proved="true">
  <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.295555" steps="25095"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.15" proved="true">
  <proof prover="3"><result status="valid" time="0.025088" steps="79"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.16" expl="move_red_left &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.027351" steps="83"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.17" expl="move_red_left requires #0" proved="true">
  <proof prover="3"><result status="valid" time="0.358009" steps="1891"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.18" expl="move_red_left requires #1" proved="true">
  <proof prover="3"><result status="valid" time="0.050246" steps="541"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.19" expl="move_red_left requires #2" proved="true">
  <proof prover="3"><result status="valid" time="0.932836" steps="5456"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.20" proved="true">
  <proof prover="3"><result status="valid" time="0.049174" steps="292"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.21" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.050170" steps="320"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.22" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.050840" steps="330"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.23" proved="true">
  <proof prover="3"><result status="valid" time="0.087613" steps="846"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.24" expl="delete_rec &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.036123" steps="108"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.25" expl="delete_rec &#39;key&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.021173" steps="102"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.26" expl="delete_rec requires #0" proved="true">
  <proof prover="3"><result status="valid" time="0.048589" steps="358"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.27" expl="delete_rec requires #1" proved="true">
  <proof prover="3"><result status="valid" time="0.060397" steps="692"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.28" proved="true">
  <proof prover="3"><result status="valid" time="0.225711" steps="604"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.29" expl="delete_rec &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.035221" steps="83"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.30" expl="delete_rec &#39;key&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.031361" steps="80"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.31" expl="delete_rec requires #0" proved="true">
  <proof prover="3"><result status="valid" time="0.372953" steps="1899"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.32" expl="delete_rec requires #1" proved="true">
  <proof prover="3"><result status="valid" time="0.738612" steps="4726"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.33" proved="true">
  <proof prover="3"><result status="valid" time="0.364803" steps="2296"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.34" expl="delete_rec &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.030530" steps="67"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.35" expl="delete_rec &#39;key&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.032220" steps="64"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.36" expl="delete_rec requires #0" proved="true">
  <proof prover="3"><result status="valid" time="0.327117" steps="1748"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.37" expl="delete_rec requires #1" proved="true">
  <proof prover="3"><result status="valid" time="0.263629" steps="1193"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.38" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.031774" steps="54"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.39" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.065888" steps="192"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.40" expl="delete_rec result type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.024933" steps="65"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.41" expl="delete_rec ensures #0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_delete_rec&#39;0.41.0" expl="delete_rec ensures #0" proved="true">
   <proof prover="0" timelimit="1" memlimit="1000"><result status="valid" time="0.110577" steps="18832"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_delete_rec&#39;0.42" expl="delete_rec ensures #1" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_delete_rec&#39;0.42.0" expl="delete_rec ensures #1" proved="true">
   <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.067865" steps="11583"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_delete_rec&#39;0.43" expl="delete_rec ensures #2" proved="true">
  <proof prover="3"><result status="valid" time="0.345042" steps="2496"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.44" expl="delete_rec ensures #3" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_delete_rec&#39;0.44.0" expl="delete_rec ensures #3" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_delete_rec&#39;0.44.0.0" expl="delete_rec ensures #3" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_delete_rec&#39;0.44.0.0.0" expl="delete_rec ensures #3" proved="true">
     <proof prover="0" timelimit="1" memlimit="1000"><result status="valid" time="0.158046" steps="19505"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="vc_delete_rec&#39;0.44.1" expl="delete_rec ensures #3" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_delete_rec&#39;0.44.1.0" expl="delete_rec ensures #3" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_delete_rec&#39;0.44.1.0.0" expl="delete_rec ensures #3" proved="true">
     <proof prover="0" timelimit="1" memlimit="1000"><result status="valid" time="0.135507" steps="19055"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="vc_delete_rec&#39;0.44.2" expl="delete_rec ensures #3" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_delete_rec&#39;0.44.2.0" expl="delete_rec ensures #3" proved="true">
    <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="0.150693" steps="19071"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_delete_rec&#39;0.45" expl="delete_rec ensures #4" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_delete_rec&#39;0.45.0" expl="delete_rec ensures #4" proved="true">
   <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.176220" steps="19166"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_delete_rec&#39;0.46" expl="delete_rec ensures #5" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_delete_rec&#39;0.46.0" expl="delete_rec ensures #5" proved="true">
   <proof prover="3"><result status="valid" time="0.094687" steps="338"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_delete_rec&#39;0.47" expl="is_red &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.345583" steps="2164"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.48" expl="is_none &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.205278" steps="2526"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.49" expl="as_ref &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.222064" steps="2530"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.50" expl="unwrap &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.022836" steps="80"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.51" expl="unwrap requires" proved="true">
  <proof prover="3"><result status="valid" time="0.022213" steps="99"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.52" expl="is_red &#39;self&#39; type invariant" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="0.077239" steps="23811"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.53" proved="true">
  <proof prover="3"><result status="valid" time="0.030951" steps="104"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.54" expl="move_red_right &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.045844" steps="112"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.55" expl="move_red_right requires #0" proved="true">
  <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.328523" steps="29867"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.56" expl="move_red_right requires #1" proved="true">
  <proof prover="3"><result status="valid" time="0.063043" steps="790"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.57" expl="move_red_right requires #2" proved="true">
  <proof prover="3"><result status="valid" time="1.635424" steps="10011"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.58" proved="true">
  <proof prover="3"><result status="valid" time="0.049829" steps="498"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.59" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.052677" steps="532"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.60" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.053507" steps="573"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.61" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.021684" steps="72"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.62" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_delete_rec&#39;0.62.0" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.057663" steps="77"/></proof>
   </goal>
   <goal name="vc_delete_rec&#39;0.62.1" expl="type invariant" proved="true">
   <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.078753" steps="11341"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_delete_rec&#39;0.63" expl="delete_rec result type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.038774" steps="96"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.64" expl="delete_rec ensures #0" proved="true">
  <proof prover="3"><result status="valid" time="0.032000" steps="307"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.65" expl="delete_rec ensures #1" proved="true">
  <proof prover="3"><result status="valid" time="0.097034" steps="312"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.66" expl="delete_rec ensures #2" proved="true">
  <proof prover="3"><result status="valid" time="0.214605" steps="2401"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.67" expl="delete_rec ensures #3" proved="true">
  <proof prover="3"><result status="valid" time="0.191147" steps="1163"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.68" expl="delete_rec ensures #4" proved="true">
  <proof prover="3"><result status="valid" time="0.039707" steps="514"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.69" expl="delete_rec ensures #5" proved="true">
  <proof prover="3"><result status="valid" time="0.060139" steps="537"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.70" proved="true">
  <proof prover="3"><result status="valid" time="0.052002" steps="84"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.71" expl="rotate_right &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.028834" steps="94"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.72" expl="rotate_right requires #0" proved="true">
  <proof prover="3"><result status="valid" time="0.270326" steps="1801"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.73" expl="rotate_right requires #1" proved="true">
  <proof prover="3"><result status="valid" time="0.024832" steps="76"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.74" proved="true">
  <proof prover="3"><result status="valid" time="0.044900" steps="326"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.75" expl="delete_rec &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.029307" steps="128"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.76" expl="delete_rec &#39;key&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.024557" steps="104"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.77" expl="delete_rec requires #0" proved="true">
  <proof prover="3"><result status="valid" time="0.045307" steps="349"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.78" expl="delete_rec requires #1" proved="true">
  <proof prover="3"><result status="valid" time="0.487971" steps="3134"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.79" proved="true">
  <proof prover="3"><result status="valid" time="0.024447" steps="110"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.80" proved="true">
  <proof prover="3"><result status="valid" time="0.026208" steps="97"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.81" expl="take &#39;dest&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.028394" steps="123"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.82" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.027301" steps="118"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.83" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.171632" steps="976"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.84" expl="unwrap &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.028794" steps="109"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.85" expl="unwrap requires" proved="true">
  <proof prover="3"><result status="valid" time="0.041214" steps="383"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.86" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.042715" steps="404"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.87" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.358979" steps="2597"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.88" expl="delete_rec result type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.446312" steps="3302"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.89" expl="delete_rec ensures #0" proved="true">
  <proof prover="3"><result status="valid" time="0.037134" steps="145"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.90" expl="delete_rec ensures #1" proved="true">
  <proof prover="3"><result status="valid" time="0.423973" steps="3329"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.91" expl="delete_rec ensures #2" proved="true">
  <proof prover="3"><result status="valid" time="0.104457" steps="1080"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.92" expl="delete_rec ensures #3" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.479220" steps="9337"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.93" expl="delete_rec ensures #4" proved="true">
  <proof prover="3"><result status="valid" time="0.055346" steps="155"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.94" expl="delete_rec ensures #5" proved="true">
  <proof prover="3"><result status="valid" time="0.059458" steps="374"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.95" proved="true">
  <proof prover="3"><result status="valid" time="0.094562" steps="248"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.96" expl="delete_rec &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.035838" steps="118"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.97" expl="delete_rec &#39;key&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.031388" steps="88"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.98" expl="delete_rec requires #0" proved="true">
  <proof prover="3"><result status="valid" time="0.097719" steps="265"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.99" expl="delete_rec requires #1" proved="true">
  <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.069268" steps="9606"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.100" proved="true">
  <proof prover="3"><result status="valid" time="1.238755" steps="9130"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.101" expl="delete_min_rec &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.032484" steps="118"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.102" expl="delete_min_rec requires #0" proved="true">
  <proof prover="3"><result status="valid" time="1.116913" steps="7895"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.103" expl="delete_min_rec requires #1" proved="true">
  <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="1.388798" steps="71013"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.104" proved="true">
  <proof prover="3"><result status="valid" time="0.452711" steps="2986"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.105" proved="true">
  <proof prover="3"><result status="valid" time="0.031511" steps="100"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.106" proved="true">
  <proof prover="3"><result status="valid" time="0.057836" steps="490"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.107" proved="true">
  <proof prover="3"><result status="valid" time="0.034475" steps="106"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.108" expl="swap &#39;x&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.038642" steps="146"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.109" expl="swap &#39;y&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.037202" steps="162"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.110" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.040885" steps="145"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.111" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.036413" steps="156"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.112" proved="true">
  <proof prover="3"><result status="valid" time="0.613177" steps="4278"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.113" proved="true">
  <proof prover="3"><result status="valid" time="0.026638" steps="124"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.114" proved="true">
  <proof prover="3"><result status="valid" time="0.065613" steps="549"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.115" proved="true">
  <proof prover="3"><result status="valid" time="0.032661" steps="130"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.116" expl="swap &#39;x&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.041201" steps="177"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.117" expl="swap &#39;y&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.043802" steps="191"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.118" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.040737" steps="175"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.119" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.043589" steps="187"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.120" proved="true">
  <proof prover="3"><result status="valid" time="0.813435" steps="5802"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.121" expl="delete_rec &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.043402" steps="118"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.122" expl="delete_rec &#39;key&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.027722" steps="88"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.123" expl="delete_rec requires #0" proved="true">
  <proof prover="3"><result status="valid" time="0.935723" steps="7536"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.124" expl="delete_rec requires #1" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="0.144818" steps="41013"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.125" proved="true">
  <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="1.371521" steps="115642"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.126" expl="balance &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.041854" steps="38"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.127" expl="balance requires #0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_delete_rec&#39;0.127.0" expl="balance requires #0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_delete_rec&#39;0.127.0.0" expl="balance requires #0" proved="true">
    <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="0.900214" steps="139239"/></proof>
    </goal>
    <goal name="vc_delete_rec&#39;0.127.0.1" expl="balance requires #0" proved="true">
    <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="0.340085" steps="33324"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="vc_delete_rec&#39;0.127.1" expl="balance requires #0" proved="true">
   <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.660627" steps="45946"/></proof>
   </goal>
   <goal name="vc_delete_rec&#39;0.127.2" expl="balance requires #0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_delete_rec&#39;0.127.2.0" expl="balance requires #0" proved="true">
    <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.075185" steps="10064"/></proof>
    </goal>
    <goal name="vc_delete_rec&#39;0.127.2.1" expl="balance requires #0" proved="true">
    <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="2.265656" steps="107082"/></proof>
    </goal>
    <goal name="vc_delete_rec&#39;0.127.2.2" expl="balance requires #0" proved="true">
    <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="0.278180" steps="56752"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_delete_rec&#39;0.128" expl="balance requires #1" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_delete_rec&#39;0.128.0" expl="balance requires #1" proved="true">
   <proof prover="2" memlimit="1000"><result status="valid" time="0.067360" steps="18452"/></proof>
   </goal>
   <goal name="vc_delete_rec&#39;0.128.1" expl="balance requires #1" proved="true">
   <proof prover="3"><result status="valid" time="0.253257" steps="1409"/></proof>
   </goal>
   <goal name="vc_delete_rec&#39;0.128.2" expl="balance requires #1" proved="true">
   <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.279563" steps="42466"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_delete_rec&#39;0.129" expl="balance requires #2" proved="true">
  <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.677131" steps="80436"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.130" expl="balance requires #3" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_delete_rec&#39;0.130.0" expl="balance requires #3" proved="true">
   <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.464676" steps="43515"/></proof>
   </goal>
   <goal name="vc_delete_rec&#39;0.130.1" expl="balance requires #3" proved="true">
   <proof prover="3"><result status="valid" time="0.180504" steps="1855"/></proof>
   </goal>
   <goal name="vc_delete_rec&#39;0.130.2" expl="balance requires #3" proved="true">
   <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.415499" steps="42293"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_delete_rec&#39;0.131" expl="type invariant" proved="true">
  <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="1.084249" steps="101013"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.132" expl="type invariant" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="0.884916" steps="161142"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.133" expl="delete_rec result type invariant" proved="true">
  <proof prover="6" timelimit="1"><result status="valid" time="0.055599" steps="181786"/></proof>
  </goal>
  <goal name="vc_delete_rec&#39;0.134" expl="delete_rec ensures #0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_delete_rec&#39;0.134.0" expl="delete_rec ensures #0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_delete_rec&#39;0.134.0.0" expl="delete_rec ensures #0" proved="true">
    <proof prover="0" timelimit="1" memlimit="1000"><result status="valid" time="0.775323" steps="62069"/></proof>
    </goal>
    <goal name="vc_delete_rec&#39;0.134.0.1" expl="delete_rec ensures #0" proved="true">
    <proof prover="3"><result status="valid" time="0.598140" steps="4604"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="vc_delete_rec&#39;0.134.1" expl="delete_rec ensures #0" proved="true">
   <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.321742" steps="32154"/></proof>
   </goal>
   <goal name="vc_delete_rec&#39;0.134.2" expl="delete_rec ensures #0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_delete_rec&#39;0.134.2.0" expl="delete_rec ensures #0" proved="true">
    <proof prover="3"><result status="valid" time="0.205571" steps="1155"/></proof>
    </goal>
    <goal name="vc_delete_rec&#39;0.134.2.1" expl="delete_rec ensures #0" proved="true">
    <proof prover="0" timelimit="1" memlimit="1000"><result status="valid" time="0.699637" steps="55425"/></proof>
    </goal>
    <goal name="vc_delete_rec&#39;0.134.2.2" expl="delete_rec ensures #0" proved="true">
    <proof prover="0" timelimit="1" memlimit="1000"><result status="valid" time="0.570955" steps="52510"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_delete_rec&#39;0.135" expl="delete_rec ensures #1" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_delete_rec&#39;0.135.0" expl="delete_rec ensures #1" proved="true">
   <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.582838" steps="47627"/></proof>
   </goal>
   <goal name="vc_delete_rec&#39;0.135.1" expl="delete_rec ensures #1" proved="true">
   <proof prover="3"><result status="valid" time="0.187829" steps="925"/></proof>
   </goal>
   <goal name="vc_delete_rec&#39;0.135.2" expl="delete_rec ensures #1" proved="true">
   <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.553059" steps="47002"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_delete_rec&#39;0.136" expl="delete_rec ensures #2" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_delete_rec&#39;0.136.0" expl="delete_rec ensures #2" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_delete_rec&#39;0.136.0.0" expl="delete_rec ensures #2" proved="true">
    <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="2.257072" steps="95490"/></proof>
    </goal>
    <goal name="vc_delete_rec&#39;0.136.0.1" expl="delete_rec ensures #2" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_delete_rec&#39;0.136.0.1.0" expl="delete_rec ensures #2" proved="true">
     <proof prover="0" timelimit="1" memlimit="1000"><result status="valid" time="1.097139" steps="70288"/></proof>
     </goal>
     <goal name="vc_delete_rec&#39;0.136.0.1.1" expl="delete_rec ensures #2" proved="true">
     <proof prover="2" memlimit="1000"><result status="valid" time="0.227628" steps="46419"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="vc_delete_rec&#39;0.136.0.2" expl="delete_rec ensures #2" proved="true">
    <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="1.367949" steps="130913"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="vc_delete_rec&#39;0.136.1" expl="delete_rec ensures #2" proved="true">
   <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.274628" steps="60166"/></proof>
   </goal>
   <goal name="vc_delete_rec&#39;0.136.2" expl="delete_rec ensures #2" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_delete_rec&#39;0.136.2.0" expl="delete_rec ensures #2" proved="true">
    <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.771013" steps="52894"/></proof>
    </goal>
    <goal name="vc_delete_rec&#39;0.136.2.1" expl="delete_rec ensures #2" proved="true">
    <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.613916" steps="45879"/></proof>
    </goal>
    <goal name="vc_delete_rec&#39;0.136.2.2" expl="delete_rec ensures #2" proved="true">
    <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="1.192928" steps="75651"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_delete_rec&#39;0.137" expl="delete_rec ensures #3" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_delete_rec&#39;0.137.0" expl="delete_rec ensures #3" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_delete_rec&#39;0.137.0.0" expl="delete_rec ensures #3" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_delete_rec&#39;0.137.0.0.0" expl="delete_rec ensures #3" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="vc_delete_rec&#39;0.137.0.0.0.0" expl="delete_rec ensures #3" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_delete_rec&#39;0.137.0.0.0.0.0" expl="delete_rec ensures #3" proved="true">
       <proof prover="0" timelimit="1" memlimit="1000"><result status="valid" time="0.863498" steps="92931"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="vc_delete_rec&#39;0.137.0.0.0.1" expl="delete_rec ensures #3" proved="true">
      <proof prover="3"><result status="valid" time="0.853636" steps="6468"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="vc_delete_rec&#39;0.137.0.0.1" expl="delete_rec ensures #3" proved="true">
     <proof prover="3"><result status="valid" time="0.905603" steps="8220"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="vc_delete_rec&#39;0.137.0.1" expl="delete_rec ensures #3" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_delete_rec&#39;0.137.0.1.0" expl="delete_rec ensures #3" proved="true">
     <proof prover="0" timelimit="10" memlimit="4000"><result status="valid" time="1.216417" steps="70575"/></proof>
     </goal>
     <goal name="vc_delete_rec&#39;0.137.0.1.1" expl="delete_rec ensures #3" proved="true">
     <proof prover="0" timelimit="10" memlimit="4000"><result status="valid" time="1.123371" steps="73424"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="vc_delete_rec&#39;0.137.0.2" expl="delete_rec ensures #3" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_delete_rec&#39;0.137.0.2.0" expl="delete_rec ensures #3" proved="true">
     <proof prover="3"><result status="valid" time="0.180144" steps="1173"/></proof>
     </goal>
     <goal name="vc_delete_rec&#39;0.137.0.2.1" expl="delete_rec ensures #3" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="vc_delete_rec&#39;0.137.0.2.1.0" expl="delete_rec ensures #3" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_delete_rec&#39;0.137.0.2.1.0.0" expl="delete_rec ensures #3" proved="true">
       <proof prover="0" timelimit="10" memlimit="4000"><result status="valid" time="1.911831" steps="104904"/></proof>
       </goal>
       <goal name="vc_delete_rec&#39;0.137.0.2.1.0.1" expl="delete_rec ensures #3" proved="true">
       <proof prover="3"><result status="valid" time="0.054604" steps="142"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="vc_delete_rec&#39;0.137.0.2.1.1" expl="delete_rec ensures #3" proved="true">
      <proof prover="0" timelimit="1" memlimit="1000"><result status="valid" time="0.667684" steps="50979"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="vc_delete_rec&#39;0.137.0.2.2" expl="delete_rec ensures #3" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="vc_delete_rec&#39;0.137.0.2.2.0" expl="delete_rec ensures #3" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_delete_rec&#39;0.137.0.2.2.0.0" expl="delete_rec ensures #3" proved="true">
       <proof prover="3"><result status="valid" time="0.048892" steps="142"/></proof>
       </goal>
       <goal name="vc_delete_rec&#39;0.137.0.2.2.0.1" expl="delete_rec ensures #3" proved="true">
       <proof prover="0" timelimit="1" memlimit="1000"><result status="valid" time="0.821073" steps="89449"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="vc_delete_rec&#39;0.137.0.2.2.1" expl="delete_rec ensures #3" proved="true">
      <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.334704" steps="30755"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="vc_delete_rec&#39;0.137.1" expl="delete_rec ensures #3" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_delete_rec&#39;0.137.1.0" expl="delete_rec ensures #3" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_delete_rec&#39;0.137.1.0.0" expl="delete_rec ensures #3" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="vc_delete_rec&#39;0.137.1.0.0.0" expl="delete_rec ensures #3" proved="true">
      <proof prover="0" timelimit="1" memlimit="1000"><result status="valid" time="0.758083" steps="54571"/></proof>
      </goal>
      <goal name="vc_delete_rec&#39;0.137.1.0.0.1" expl="delete_rec ensures #3" proved="true">
      <proof prover="3"><result status="valid" time="0.902446" steps="6302"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="vc_delete_rec&#39;0.137.1.0.1" expl="delete_rec ensures #3" proved="true">
     <proof prover="3"><result status="valid" time="1.008578" steps="7391"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="vc_delete_rec&#39;0.137.1.1" expl="delete_rec ensures #3" proved="true">
    <proof prover="6" timelimit="1"><result status="valid" time="0.144182" steps="178437"/></proof>
    </goal>
    <goal name="vc_delete_rec&#39;0.137.1.2" expl="delete_rec ensures #3" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_delete_rec&#39;0.137.1.2.0" expl="delete_rec ensures #3" proved="true">
     <proof prover="3"><result status="valid" time="0.226731" steps="1174"/></proof>
     </goal>
     <goal name="vc_delete_rec&#39;0.137.1.2.1" expl="delete_rec ensures #3" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="vc_delete_rec&#39;0.137.1.2.1.0" expl="delete_rec ensures #3" proved="true">
      <proof prover="6" timelimit="1"><result status="valid" time="0.332307" steps="439764"/></proof>
      </goal>
      <goal name="vc_delete_rec&#39;0.137.1.2.1.1" expl="delete_rec ensures #3" proved="true">
      <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.416156" steps="34964"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="vc_delete_rec&#39;0.137.1.2.2" expl="delete_rec ensures #3" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="vc_delete_rec&#39;0.137.1.2.2.0" expl="delete_rec ensures #3" proved="true">
      <proof prover="0" timelimit="1" memlimit="1000"><result status="valid" time="0.735975" steps="57014"/></proof>
      </goal>
      <goal name="vc_delete_rec&#39;0.137.1.2.2.1" expl="delete_rec ensures #3" proved="true">
      <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.281715" steps="30330"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="vc_delete_rec&#39;0.137.2" expl="delete_rec ensures #3" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_delete_rec&#39;0.137.2.0" expl="delete_rec ensures #3" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_delete_rec&#39;0.137.2.0.0" expl="delete_rec ensures #3" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="vc_delete_rec&#39;0.137.2.0.0.0" expl="delete_rec ensures #3" proved="true">
      <proof prover="6" timelimit="1"><result status="valid" time="0.645349" steps="787210"/></proof>
      </goal>
      <goal name="vc_delete_rec&#39;0.137.2.0.0.1" expl="delete_rec ensures #3" proved="true">
      <proof prover="3"><result status="valid" time="0.859492" steps="5640"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="vc_delete_rec&#39;0.137.2.0.1" expl="delete_rec ensures #3" proved="true">
     <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.287911" steps="29383"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="vc_delete_rec&#39;0.137.2.1" expl="delete_rec ensures #3" proved="true">
    <proof prover="6" timelimit="1"><result status="valid" time="0.209821" steps="282732"/></proof>
    </goal>
    <goal name="vc_delete_rec&#39;0.137.2.2" expl="delete_rec ensures #3" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_delete_rec&#39;0.137.2.2.0" expl="delete_rec ensures #3" proved="true">
     <proof prover="3"><result status="valid" time="0.220338" steps="1175"/></proof>
     </goal>
     <goal name="vc_delete_rec&#39;0.137.2.2.1" expl="delete_rec ensures #3" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="vc_delete_rec&#39;0.137.2.2.1.0" expl="delete_rec ensures #3" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_delete_rec&#39;0.137.2.2.1.0.0" expl="delete_rec ensures #3" proved="true">
       <proof prover="0" timelimit="10" memlimit="4000"><result status="valid" time="1.874230" steps="110858"/></proof>
       </goal>
       <goal name="vc_delete_rec&#39;0.137.2.2.1.0.1" expl="delete_rec ensures #3" proved="true">
       <proof prover="3"><result status="valid" time="0.062487" steps="142"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="vc_delete_rec&#39;0.137.2.2.1.1" expl="delete_rec ensures #3" proved="true">
      <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.354556" steps="34119"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="vc_delete_rec&#39;0.137.2.2.2" expl="delete_rec ensures #3" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="vc_delete_rec&#39;0.137.2.2.2.0" expl="delete_rec ensures #3" proved="true">
      <proof prover="6" timelimit="1"><result status="valid" time="0.496996" steps="788989"/></proof>
      </goal>
      <goal name="vc_delete_rec&#39;0.137.2.2.2.1" expl="delete_rec ensures #3" proved="true">
      <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.301069" steps="31120"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_delete_rec&#39;0.138" expl="delete_rec ensures #4" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_delete_rec&#39;0.138.0" expl="delete_rec ensures #4" proved="true">
   <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.591560" steps="54603"/></proof>
   </goal>
   <goal name="vc_delete_rec&#39;0.138.1" expl="delete_rec ensures #4" proved="true">
   <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.398094" steps="34691"/></proof>
   </goal>
   <goal name="vc_delete_rec&#39;0.138.2" expl="delete_rec ensures #4" proved="true">
   <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.734416" steps="56693"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_delete_rec&#39;0.139" expl="delete_rec ensures #5" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_delete_rec&#39;0.139.0" expl="delete_rec ensures #5" proved="true">
   <proof prover="3"><result status="valid" time="0.242787" steps="1898"/></proof>
   </goal>
   <goal name="vc_delete_rec&#39;0.139.1" expl="delete_rec ensures #5" proved="true">
   <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.418504" steps="33443"/></proof>
   </goal>
   <goal name="vc_delete_rec&#39;0.139.2" expl="delete_rec ensures #5" proved="true">
   <proof prover="3"><result status="valid" time="0.754957" steps="5578"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi10312951825188598006__resolve_coherence__refines" proved="true">
 <goal name="refines" proved="true">
 <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.048307" steps="12"/></proof>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi10312951825188598006__resolve_coherence" proved="true">
 <goal name="vc_resolve_coherence&#39;0" proved="true">
 <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.025130" steps="100"/></proof>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi1501420612169366910__new" proved="true">
 <goal name="vc_new&#39;0" proved="true">
 <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.021211" steps="77"/></proof>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi1501420612169366910__insert" proved="true">
 <goal name="vc_insert&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_insert&#39;0.0" proved="true">
  <proof prover="6" timelimit="5"><result status="valid" time="0.016883" steps="35050"/></proof>
  </goal>
  <goal name="vc_insert&#39;0.1" expl="insert_rec &#39;self&#39; type invariant" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.015737" steps="26"/></proof>
  </goal>
  <goal name="vc_insert&#39;0.2" expl="insert_rec &#39;key&#39; type invariant" proved="true">
  <proof prover="2" memlimit="1000"><result status="valid" time="0.011632" steps="4344"/></proof>
  </goal>
  <goal name="vc_insert&#39;0.3" expl="insert_rec &#39;val&#39; type invariant" proved="true">
  <proof prover="6" timelimit="5"><result status="valid" time="0.008073" steps="2915"/></proof>
  </goal>
  <goal name="vc_insert&#39;0.4" expl="insert_rec requires #0" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="0.040479" steps="12797"/></proof>
  </goal>
  <goal name="vc_insert&#39;0.5" expl="insert_rec requires #1" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.018866" steps="71"/></proof>
  </goal>
  <goal name="vc_insert&#39;0.6" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.023324" steps="83"/></proof>
  </goal>
  <goal name="vc_insert&#39;0.7" expl="as_mut &#39;self&#39; type invariant" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.020406" steps="44"/></proof>
  </goal>
  <goal name="vc_insert&#39;0.8" expl="unwrap &#39;self&#39; type invariant" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.017053" steps="36"/></proof>
  </goal>
  <goal name="vc_insert&#39;0.9" expl="unwrap requires" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="0.035482" steps="13610"/></proof>
  </goal>
  <goal name="vc_insert&#39;0.10" expl="type invariant" proved="true">
  <proof prover="6" timelimit="5"><result status="valid" time="0.030146" steps="74064"/></proof>
  </goal>
  <goal name="vc_insert&#39;0.11" expl="type invariant" proved="true">
  <proof prover="2" memlimit="1000"><result status="valid" time="0.244723" steps="21943"/></proof>
  </goal>
  <goal name="vc_insert&#39;0.12" expl="insert ensures" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="0.555021" steps="44668"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi1501420612169366910__delete_max" proved="true">
 <goal name="vc_delete_max&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_delete_max&#39;0.0" proved="true">
  <proof prover="6" timelimit="5"><result status="valid" time="0.021617" steps="61704"/></proof>
  </goal>
  <goal name="vc_delete_max&#39;0.1" expl="type invariant" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.018504" steps="28"/></proof>
  </goal>
  <goal name="vc_delete_max&#39;0.2" expl="type invariant" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.014706" steps="37"/></proof>
  </goal>
  <goal name="vc_delete_max&#39;0.3" expl="delete_max result type invariant" proved="true">
  <proof prover="2" memlimit="1000"><result status="valid" time="0.021165" steps="8991"/></proof>
  </goal>
  <goal name="vc_delete_max&#39;0.4" expl="delete_max ensures" proved="true">
  <proof prover="2" memlimit="1000"><result status="valid" time="0.048837" steps="14231"/></proof>
  </goal>
  <goal name="vc_delete_max&#39;0.5" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.019323" steps="51"/></proof>
  </goal>
  <goal name="vc_delete_max&#39;0.6" expl="is_red &#39;self&#39; type invariant" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.163187" steps="744"/></proof>
  </goal>
  <goal name="vc_delete_max&#39;0.7" expl="type invariant" proved="true">
  <proof prover="6" timelimit="5"><result status="valid" time="0.022528" steps="56819"/></proof>
  </goal>
  <goal name="vc_delete_max&#39;0.8" expl="type invariant" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.021241" steps="206"/></proof>
  </goal>
  <goal name="vc_delete_max&#39;0.9" expl="type invariant" proved="true">
  <proof prover="2" memlimit="1000"><result status="valid" time="0.043239" steps="12458"/></proof>
  </goal>
  <goal name="vc_delete_max&#39;0.10" expl="type invariant" proved="true">
  <proof prover="2" memlimit="1000"><result status="valid" time="0.047290" steps="13019"/></proof>
  </goal>
  <goal name="vc_delete_max&#39;0.11" proved="true">
  <proof prover="6" timelimit="5"><result status="valid" time="0.015619" steps="37436"/></proof>
  </goal>
  <goal name="vc_delete_max&#39;0.12" expl="assertion" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.047927" steps="703"/></proof>
  </goal>
  <goal name="vc_delete_max&#39;0.13" proved="true">
  <proof prover="6" timelimit="5"><result status="valid" time="0.021441" steps="56681"/></proof>
  </goal>
  <goal name="vc_delete_max&#39;0.14" expl="delete_max_rec &#39;self&#39; type invariant" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="0.053027" steps="17710"/></proof>
  </goal>
  <goal name="vc_delete_max&#39;0.15" expl="delete_max_rec requires #0" proved="true">
  <proof prover="2" memlimit="1000"><result status="valid" time="0.297271" steps="24590"/></proof>
  </goal>
  <goal name="vc_delete_max&#39;0.16" expl="delete_max_rec requires #1" proved="true">
  <proof prover="2" memlimit="1000"><result status="valid" time="0.107960" steps="23169"/></proof>
  </goal>
  <goal name="vc_delete_max&#39;0.17" expl="is_red &#39;self&#39; type invariant" proved="true">
  <proof prover="2" memlimit="1000"><result status="valid" time="0.024115" steps="8844"/></proof>
  </goal>
  <goal name="vc_delete_max&#39;0.18" expl="type invariant" proved="true">
  <proof prover="2" memlimit="1000"><result status="valid" time="0.076910" steps="18078"/></proof>
  </goal>
  <goal name="vc_delete_max&#39;0.19" expl="delete_max result type invariant" proved="true">
  <proof prover="2" memlimit="1000"><result status="valid" time="0.036216" steps="9115"/></proof>
  </goal>
  <goal name="vc_delete_max&#39;0.20" expl="delete_max ensures" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="0.433868" steps="45307"/></proof>
  </goal>
  <goal name="vc_delete_max&#39;0.21" proved="true">
  <proof prover="2" memlimit="1000"><result status="valid" time="0.026602" steps="8958"/></proof>
  </goal>
  <goal name="vc_delete_max&#39;0.22" expl="as_mut &#39;self&#39; type invariant" proved="true">
  <proof prover="2" memlimit="1000"><result status="valid" time="0.065132" steps="15671"/></proof>
  </goal>
  <goal name="vc_delete_max&#39;0.23" expl="unwrap &#39;self&#39; type invariant" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.021682" steps="78"/></proof>
  </goal>
  <goal name="vc_delete_max&#39;0.24" expl="unwrap requires" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="0.059150" steps="18014"/></proof>
  </goal>
  <goal name="vc_delete_max&#39;0.25" expl="type invariant" proved="true">
  <proof prover="6" timelimit="5"><result status="valid" time="0.057935" steps="133568"/></proof>
  </goal>
  <goal name="vc_delete_max&#39;0.26" expl="type invariant" proved="true">
  <proof prover="2" memlimit="1000"><result status="valid" time="0.340936" steps="29812"/></proof>
  </goal>
  <goal name="vc_delete_max&#39;0.27" expl="delete_max result type invariant" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.030893" steps="366"/></proof>
  </goal>
  <goal name="vc_delete_max&#39;0.28" expl="delete_max ensures" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="0.799118" steps="66110"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi1501420612169366910__delete_min" proved="true">
 <goal name="vc_delete_min&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_delete_min&#39;0.0" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.037021" steps="486"/></proof>
  </goal>
  <goal name="vc_delete_min&#39;0.1" expl="type invariant" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.019415" steps="28"/></proof>
  </goal>
  <goal name="vc_delete_min&#39;0.2" expl="type invariant" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.021474" steps="37"/></proof>
  </goal>
  <goal name="vc_delete_min&#39;0.3" expl="delete_min result type invariant" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.020476" steps="37"/></proof>
  </goal>
  <goal name="vc_delete_min&#39;0.4" expl="delete_min ensures" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.026122" steps="104"/></proof>
  </goal>
  <goal name="vc_delete_min&#39;0.5" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.021727" steps="51"/></proof>
  </goal>
  <goal name="vc_delete_min&#39;0.6" expl="is_red &#39;self&#39; type invariant" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.129001" steps="744"/></proof>
  </goal>
  <goal name="vc_delete_min&#39;0.7" expl="type invariant" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.058790" steps="331"/></proof>
  </goal>
  <goal name="vc_delete_min&#39;0.8" expl="type invariant" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.021810" steps="206"/></proof>
  </goal>
  <goal name="vc_delete_min&#39;0.9" expl="type invariant" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.021139" steps="38"/></proof>
  </goal>
  <goal name="vc_delete_min&#39;0.10" expl="type invariant" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.048620" steps="48"/></proof>
  </goal>
  <goal name="vc_delete_min&#39;0.11" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.019884" steps="24"/></proof>
  </goal>
  <goal name="vc_delete_min&#39;0.12" proved="true">
  <proof prover="0"><result status="valid" time="0.118069" steps="15334"/></proof>
  </goal>
  <goal name="vc_delete_min&#39;0.13" expl="delete_min_rec &#39;self&#39; type invariant" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.024404" steps="92"/></proof>
  </goal>
  <goal name="vc_delete_min&#39;0.14" expl="delete_min_rec requires #0" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.226766" steps="2130"/></proof>
  </goal>
  <goal name="vc_delete_min&#39;0.15" expl="delete_min_rec requires #1" proved="true">
  <proof prover="2" memlimit="1000"><result status="valid" time="0.215834" steps="22862"/></proof>
  </goal>
  <goal name="vc_delete_min&#39;0.16" expl="is_red &#39;self&#39; type invariant" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.041057" steps="15407"/></proof>
  </goal>
  <goal name="vc_delete_min&#39;0.17" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.118197" steps="17427"/></proof>
  </goal>
  <goal name="vc_delete_min&#39;0.18" expl="delete_min result type invariant" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.047375" steps="262"/></proof>
  </goal>
  <goal name="vc_delete_min&#39;0.19" expl="delete_min ensures" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="2.064567" steps="116122"/></proof>
  </goal>
  <goal name="vc_delete_min&#39;0.20" proved="true">
  <proof prover="6"><result status="valid" time="0.044154" steps="48812"/></proof>
  </goal>
  <goal name="vc_delete_min&#39;0.21" expl="as_mut &#39;self&#39; type invariant" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.028513" steps="113"/></proof>
  </goal>
  <goal name="vc_delete_min&#39;0.22" expl="unwrap &#39;self&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.099432" steps="15079"/></proof>
  </goal>
  <goal name="vc_delete_min&#39;0.23" expl="unwrap requires" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.029249" steps="673"/></proof>
  </goal>
  <goal name="vc_delete_min&#39;0.24" expl="type invariant" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="1.193023" steps="7859"/></proof>
  </goal>
  <goal name="vc_delete_min&#39;0.25" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.401507" steps="29592"/></proof>
  </goal>
  <goal name="vc_delete_min&#39;0.26" expl="delete_min result type invariant" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.079003" steps="356"/></proof>
  </goal>
  <goal name="vc_delete_min&#39;0.27" expl="delete_min ensures" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="4.546570" steps="193631"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi1501420612169366910__delete" proved="true">
 <goal name="vc_delete&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_delete&#39;0.0" proved="true">
  <proof prover="2"><result status="valid" time="0.054286" steps="13601"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.1" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.022121" steps="12954"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.2" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.050234" steps="8885"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.3" expl="delete result type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.010585" steps="9020"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.4" expl="delete ensures #0" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.159389" steps="14080"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.5" expl="delete ensures #1" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.059490" steps="13219"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.6" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.021887" steps="55"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.7" expl="is_red &#39;self&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.074176" steps="15178"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.8" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.156962" steps="18386"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.9" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.136875" steps="13899"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.10" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.031007" steps="12499"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.11" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.028569" steps="13060"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.12" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.014384" steps="8970"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.13" proved="true">
  <proof prover="2"><result status="valid" time="0.070852" steps="10364"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.14" expl="delete_rec &#39;self&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.056815" steps="17980"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.15" expl="delete_rec &#39;key&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.093759" steps="14986"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.16" expl="delete_rec requires #0" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.266162" steps="2083"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.17" expl="delete_rec requires #1" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.219028" steps="22911"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.18" expl="is_red &#39;self&#39; type invariant" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.055695" steps="15633"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.19" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.161186" steps="17326"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.20" expl="delete result type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.009552" steps="5519"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.21" expl="delete ensures #0" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="0.672204" steps="54051"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.22" expl="delete ensures #1" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="0.503915" steps="49123"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.23" proved="true">
  <proof prover="2"><result status="valid" time="0.058406" steps="9098"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.24" expl="as_mut &#39;self&#39; type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.052974" steps="15298"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.25" expl="unwrap &#39;self&#39; type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.021339" steps="5597"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.26" expl="unwrap requires" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.036911" steps="10444"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.27" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.561704" steps="41858"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.28" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.315732" steps="30312"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.29" expl="delete result type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.015222" steps="5708"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.30" expl="delete ensures #0" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="0.712227" steps="57188"/></proof>
  </goal>
  <goal name="vc_delete&#39;0.31" expl="delete ensures #1" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="2.024032" steps="130425"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi1501420612169366910__get" proved="true">
 <goal name="vc_get&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_get&#39;0.0" expl="loop invariant #0" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.059068" steps="41"/></proof>
  </goal>
  <goal name="vc_get&#39;0.1" expl="loop invariant #1" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.044185" steps="52"/></proof>
  </goal>
  <goal name="vc_get&#39;0.2" expl="loop invariant #2" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.028032" steps="22"/></proof>
  </goal>
  <goal name="vc_get&#39;0.3" expl="get result type invariant" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.067993" steps="26"/></proof>
  </goal>
  <goal name="vc_get&#39;0.4" expl="get ensures" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.062827" steps="137"/></proof>
  </goal>
  <goal name="vc_get&#39;0.5" expl="cmp &#39;self&#39; type invariant" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.018828" steps="26"/></proof>
  </goal>
  <goal name="vc_get&#39;0.6" expl="cmp &#39;other&#39; type invariant" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.052943" steps="268"/></proof>
  </goal>
  <goal name="vc_get&#39;0.7" expl="loop invariant #0" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.023726" steps="256"/></proof>
  </goal>
  <goal name="vc_get&#39;0.8" expl="loop invariant #1" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.019994" steps="332"/></proof>
  </goal>
  <goal name="vc_get&#39;0.9" expl="loop invariant #2" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.148027" steps="592"/></proof>
  </goal>
  <goal name="vc_get&#39;0.10" expl="get result type invariant" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.028474" steps="312"/></proof>
  </goal>
  <goal name="vc_get&#39;0.11" expl="get ensures" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.020439" steps="359"/></proof>
  </goal>
  <goal name="vc_get&#39;0.12" expl="loop invariant #0" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.066169" steps="414"/></proof>
  </goal>
  <goal name="vc_get&#39;0.13" expl="loop invariant #1" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.045279" steps="79"/></proof>
  </goal>
  <goal name="vc_get&#39;0.14" expl="loop invariant #2" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.026462" steps="284"/></proof>
  </goal>
  <goal name="vc_get&#39;0.15" proved="true">
  <proof prover="3" memlimit="2000"><result status="valid" time="0.019487" steps="24"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_red_black_tree__qyi1501420612169366910__get_mut" proved="true">
 <goal name="vc_get_mut&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_get_mut&#39;0.0" proved="true">
  <proof prover="6"><result status="valid" time="0.041033" steps="37202"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.1" expl="loop invariant #0" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.120747" steps="12096"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.2" expl="loop invariant #1" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.147896" steps="12398"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.3" expl="loop invariant #2" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.150529" steps="12458"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.4" expl="loop invariant #3" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.051759" steps="12551"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.5" expl="loop invariant #4" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.034315" steps="8239"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.6" expl="loop invariant #5" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.066689" steps="8279"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.7" expl="loop invariant #6" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.056523" steps="8304"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.8" expl="loop invariant #7" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.037364" steps="8398"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.9" expl="loop invariant #8" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.166019" steps="16017"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.10" expl="loop invariant #9" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.042276" steps="9239"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.11" proved="true">
  <proof prover="6"><result status="valid" time="0.033198" steps="50774"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.12" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.147682" steps="15934"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.13" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.041301" steps="9641"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.14" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.168718" steps="17767"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.15" expl="get_mut result type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.108421" steps="16086"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.16" expl="get_mut ensures" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.224828" steps="1479"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.17" proved="true">
  <proof prover="6"><result status="valid" time="0.037414" steps="40300"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.18" expl="cmp &#39;self&#39; type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.011742" steps="5496"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.19" expl="cmp &#39;other&#39; type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.073724" steps="17708"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.20" proved="true">
  <proof prover="2"><result status="valid" time="0.148840" steps="17992"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.21" proved="true">
  <proof prover="2"><result status="valid" time="0.084655" steps="5527"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.22" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.155705" steps="19570"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.23" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.161758" steps="16276"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.24" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.266082" steps="26017"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.25" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.164390" steps="19523"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.26" expl="loop invariant #0" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.183651" steps="17562"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.27" expl="loop invariant #1" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.136329" steps="17844"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.28" expl="loop invariant #2" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.184965" steps="17878"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.29" expl="loop invariant #3" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.155329" steps="17935"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.30" expl="loop invariant #4" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.363106" steps="32348"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.31" expl="loop invariant #5" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.286866" steps="31672"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.32" expl="loop invariant #6" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.679691" steps="42507"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.33" expl="loop invariant #7" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.155087" steps="19589"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.34" expl="loop invariant #8" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.187279" steps="22094"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.35" expl="loop invariant #9" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.327952" steps="25832"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.36" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.147878" steps="508"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.37" proved="true">
  <proof prover="2"><result status="valid" time="0.118232" steps="5525"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.38" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.037071" steps="14672"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.39" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.261283" steps="24486"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.40" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.152675" steps="18368"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.41" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.131069" steps="19002"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.42" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.382497" steps="33233"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.43" expl="get_mut result type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.242561" steps="24154"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.44" expl="get_mut ensures" proved="true">
  <proof prover="0" timelimit="5" memlimit="1000"><result status="valid" time="2.243647" steps="144459"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.45" proved="true">
  <proof prover="3" timelimit="3" memlimit="2000"><result status="valid" time="0.027694" steps="193"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.46" proved="true">
  <proof prover="2"><result status="valid" time="0.051701" steps="5527"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.47" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.162055" steps="19575"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.48" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.163647" steps="16266"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.49" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.280734" steps="27201"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.50" expl="type invariant" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.160510" steps="19487"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.51" expl="loop invariant #0" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.168952" steps="17493"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.52" expl="loop invariant #1" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.123201" steps="17775"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.53" expl="loop invariant #2" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.166221" steps="17809"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.54" expl="loop invariant #3" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.173249" steps="17866"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.55" expl="loop invariant #4" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.468222" steps="35599"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.56" expl="loop invariant #5" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.484630" steps="35106"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.57" expl="loop invariant #6" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.227911" steps="1778"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.58" expl="loop invariant #7" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.199558" steps="19518"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.59" expl="loop invariant #8" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.168501" steps="21960"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.60" expl="loop invariant #9" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.414188" steps="36440"/></proof>
  </goal>
  <goal name="vc_get_mut&#39;0.61" proved="true">
  <proof prover="2" timelimit="3"><result status="valid" time="0.014045" steps="9248"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
