<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.12.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.6.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="17_filter.coma"/>
<theory name="M_17_filter__qyi17392541228996028033__produces_refl__refines" proved="true">
 <goal name="refines" proved="true">
 <proof prover="2"><result status="valid" time="0.027103" steps="7942"/></proof>
 </goal>
</theory>
<theory name="M_17_filter__qyi17392541228996028033__produces_refl" proved="true">
 <goal name="vc_produces_refl&#39;0" proved="true">
 <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
  <goal name="vc_produces_refl&#39;0.0" proved="true">
  <transf name="unfold" proved="true" arg1="produces&#39;0">
   <goal name="vc_produces_refl&#39;0.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_produces_refl&#39;0.0.0.0" proved="true">
    <proof prover="1"><result status="valid" time="0.014083" steps="4"/></proof>
    </goal>
    <goal name="vc_produces_refl&#39;0.0.0.1" proved="true">
    <transf name="exists" proved="true" arg1="(empty: seq t_Item&#39;0)">
     <goal name="vc_produces_refl&#39;0.0.0.1.0" proved="true">
     <proof prover="0"><result status="valid" time="0.024618" steps="83047"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_17_filter__qyi17392541228996028033__produces_trans__refines" proved="true">
 <goal name="refines" proved="true">
 <proof prover="1"><result status="valid" time="0.016548" steps="0"/></proof>
 </goal>
</theory>
<theory name="M_17_filter__qyi17392541228996028033__produces_trans" proved="true">
 <goal name="vc_produces_trans&#39;0" proved="true">
 <transf name="unfold" proved="true" arg1="produces&#39;0">
  <goal name="vc_produces_trans&#39;0.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_produces_trans&#39;0.0.0" proved="true">
   <proof prover="3" timelimit="5"><result status="valid" time="0.028661" steps="9693"/></proof>
   </goal>
   <goal name="vc_produces_trans&#39;0.0.1" proved="true">
   <transf name="exists" proved="true" arg1="(s ++ s1)">
    <goal name="vc_produces_trans&#39;0.0.1.0" proved="true">
    <transf name="exists" proved="true" arg1="(fun i -&gt; if i &lt; length ab then f i else (f1 (i - length ab) + length s))">
     <goal name="vc_produces_trans&#39;0.0.1.0.0" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="vc_produces_trans&#39;0.0.1.0.0.0" proved="true">
      <proof prover="0"><result status="valid" time="0.031426" steps="58382"/></proof>
      </goal>
      <goal name="vc_produces_trans&#39;0.0.1.0.0.1" proved="true">
      <proof prover="0"><result status="valid" time="0.037591" steps="71898"/></proof>
      </goal>
      <goal name="vc_produces_trans&#39;0.0.1.0.0.2" proved="true">
      <proof prover="3" timelimit="5"><result status="valid" time="0.093298" steps="13244"/></proof>
      </goal>
      <goal name="vc_produces_trans&#39;0.0.1.0.0.3" proved="true">
      <proof prover="3" timelimit="5"><result status="valid" time="0.081422" steps="11881"/></proof>
      </goal>
      <goal name="vc_produces_trans&#39;0.0.1.0.0.4" proved="true">
      <proof prover="2"><result status="valid" time="0.073259" steps="19318"/></proof>
      </goal>
      <goal name="vc_produces_trans&#39;0.0.1.0.0.5" proved="true">
      <proof prover="3" timelimit="5"><result status="valid" time="0.171309" steps="27752"/></proof>
      </goal>
      <goal name="vc_produces_trans&#39;0.0.1.0.0.6" proved="true">
      <transf name="case" proved="true" arg1="(i &lt; length s)">
       <goal name="vc_produces_trans&#39;0.0.1.0.0.6.0" expl="true case" proved="true">
       <proof prover="0"><result status="valid" time="0.031511" steps="70856"/></proof>
       </goal>
       <goal name="vc_produces_trans&#39;0.0.1.0.0.6.1" expl="false case" proved="true">
       <transf name="instantiate" proved="true" arg1="H13" arg2="bor_f,(i-length s)">
        <goal name="vc_produces_trans&#39;0.0.1.0.0.6.1.0" expl="false case" proved="true">
        <transf name="destruct_rec" proved="true" arg1="Hinst">
         <goal name="vc_produces_trans&#39;0.0.1.0.0.6.1.0.0" expl="destruct premise" proved="true">
         <proof prover="2"><result status="valid" time="0.050252" steps="17618"/></proof>
         </goal>
         <goal name="vc_produces_trans&#39;0.0.1.0.0.6.1.0.1" expl="destruct premise" proved="true">
         <proof prover="1"><result status="valid" time="0.024774" steps="28"/></proof>
         </goal>
         <goal name="vc_produces_trans&#39;0.0.1.0.0.6.1.0.2" expl="false case" proved="true">
         <proof prover="1"><result status="valid" time="0.027049" steps="135"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_17_filter__qyi17392541228996028033__next__refines" proved="true">
 <goal name="refines" proved="true">
 <proof prover="2"><result status="valid" time="0.032063" steps="8899"/></proof>
 </goal>
</theory>
<theory name="M_17_filter__qyi17392541228996028033__next" proved="true">
 <goal name="vc_next&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_next&#39;0.0" expl="mut invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.015985" steps="6363"/></proof>
  </goal>
  <goal name="vc_next&#39;0.1" expl="loop invariant #0" proved="true">
  <proof prover="3"><result status="valid" time="0.018920" steps="5426"/></proof>
  </goal>
  <goal name="vc_next&#39;0.2" expl="loop invariant #1" proved="true">
  <proof prover="3"><result status="valid" time="0.024402" steps="6344"/></proof>
  </goal>
  <goal name="vc_next&#39;0.3" expl="loop invariant #2" proved="true">
  <proof prover="3"><result status="valid" time="0.035799" steps="9240"/></proof>
  </goal>
  <goal name="vc_next&#39;0.4" expl="loop invariant #3" proved="true">
  <proof prover="3"><result status="valid" time="0.025173" steps="10176"/></proof>
  </goal>
  <goal name="vc_next&#39;0.5" expl="loop invariant #4" proved="true">
  <proof prover="3"><result status="valid" time="0.026285" steps="9361"/></proof>
  </goal>
  <goal name="vc_next&#39;0.6" proved="true">
  <proof prover="3"><result status="valid" time="0.031052" steps="10486"/></proof>
  </goal>
  <goal name="vc_next&#39;0.7" expl="next &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.031786" steps="10055"/></proof>
  </goal>
  <goal name="vc_next&#39;0.8" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.019163" steps="8460"/></proof>
  </goal>
  <goal name="vc_next&#39;0.9" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.135125" steps="11433"/></proof>
  </goal>
  <goal name="vc_next&#39;0.10" expl="next result type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.019148" steps="8738"/></proof>
  </goal>
  <goal name="vc_next&#39;0.11" expl="next ensures" proved="true">
  <proof prover="0"><result status="valid" time="0.019046" steps="81053"/></proof>
  </goal>
  <goal name="vc_next&#39;0.12" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="vc_next&#39;0.12.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.037868" steps="12279"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_next&#39;0.13" proved="true">
  <proof prover="3"><result status="valid" time="0.031208" steps="10539"/></proof>
  </goal>
  <goal name="vc_next&#39;0.14" expl="call_mut &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.031061" steps="10303"/></proof>
  </goal>
  <goal name="vc_next&#39;0.15" expl="call_mut &#39;args&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.032542" steps="10778"/></proof>
  </goal>
  <goal name="vc_next&#39;0.16" expl="call_mut requires" proved="true">
  <proof prover="3"><result status="valid" time="0.032395" steps="10766"/></proof>
  </goal>
  <goal name="vc_next&#39;0.17" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.025367" steps="9402"/></proof>
  </goal>
  <goal name="vc_next&#39;0.18" expl="mut invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.027236" steps="8345"/></proof>
  </goal>
  <goal name="vc_next&#39;0.19" expl="loop invariant #0" proved="true">
  <proof prover="3"><result status="valid" time="0.016191" steps="10981"/></proof>
  </goal>
  <goal name="vc_next&#39;0.20" expl="loop invariant #1" proved="true">
  <proof prover="3"><result status="valid" time="0.140911" steps="10976"/></proof>
  </goal>
  <goal name="vc_next&#39;0.21" expl="loop invariant #2" proved="true">
  <proof prover="3"><result status="valid" time="0.019116" steps="13077"/></proof>
  </goal>
  <goal name="vc_next&#39;0.22" expl="loop invariant #3" proved="true">
  <proof prover="3"><result status="valid" time="0.049348" steps="8540"/></proof>
  </goal>
  <goal name="vc_next&#39;0.23" expl="loop invariant #4" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.020908" steps="8851"/></proof>
  </goal>
  <goal name="vc_next&#39;0.24" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.033945" steps="10959"/></proof>
  </goal>
  <goal name="vc_next&#39;0.25" expl="next result type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.060862" steps="24102"/></proof>
  </goal>
  <goal name="vc_next&#39;0.26" expl="next ensures" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="vc_next&#39;0.26.0" expl="next ensures" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_next&#39;0.26.0.0" expl="next ensures" proved="true">
    <proof prover="3" timelimit="5"><result status="valid" time="0.032139" steps="9884"/></proof>
    </goal>
    <goal name="vc_next&#39;0.26.0.1" expl="next ensures" proved="true">
    <transf name="exists" proved="true" arg1="(snoc (inner produced) field_0)">
     <goal name="vc_next&#39;0.26.0.1.0" proved="true">
     <transf name="exists" proved="true" arg1="(fun (_ : int) -&gt; length (inner produced))">
      <goal name="vc_next&#39;0.26.0.1.0.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_next&#39;0.26.0.1.0.0.0" proved="true">
       <proof prover="0"><result status="valid" time="0.019923" steps="76444"/></proof>
       </goal>
       <goal name="vc_next&#39;0.26.0.1.0.0.1" proved="true">
       <proof prover="2"><result status="valid" time="0.054198" steps="19725"/></proof>
       </goal>
       <goal name="vc_next&#39;0.26.0.1.0.0.2" proved="true">
       <proof prover="3" timelimit="5"><result status="valid" time="0.046913" steps="11805"/></proof>
       </goal>
       <goal name="vc_next&#39;0.26.0.1.0.0.3" proved="true">
       <proof prover="1"><result status="valid" time="0.017256" steps="62"/></proof>
       </goal>
       <goal name="vc_next&#39;0.26.0.1.0.0.4" proved="true">
       <proof prover="3" timelimit="5"><result status="valid" time="0.088763" steps="21432"/></proof>
       </goal>
       <goal name="vc_next&#39;0.26.0.1.0.0.5" proved="true">
       <proof prover="3" timelimit="5"><result status="valid" time="0.056568" steps="13597"/></proof>
       </goal>
       <goal name="vc_next&#39;0.26.0.1.0.0.6" proved="true">
       <transf name="exists" proved="true" arg1="0">
        <goal name="vc_next&#39;0.26.0.1.0.0.6.0" proved="true">
        <proof prover="3" timelimit="5"><result status="valid" time="0.070624" steps="18292"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_next&#39;0.27" proved="true">
  <proof prover="3"><result status="valid" time="0.029219" steps="8659"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_17_filter__filter" proved="true">
 <goal name="vc_filter&#39;0" proved="true">
 <proof prover="3"><result status="valid" time="0.026229" steps="5594"/></proof>
 </goal>
</theory>
<theory name="M_17_filter__less_than" proved="true">
 <goal name="vc_closure2&#39;0" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.021182" steps="6439"/></proof>
 </goal>
 <goal name="vc_less_than&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_less_than&#39;0.0" expl="into_iter &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.017634" steps="7182"/></proof>
  </goal>
  <goal name="vc_less_than&#39;0.1" expl="into_iter requires" proved="true">
  <proof prover="3"><result status="valid" time="0.026326" steps="6152"/></proof>
  </goal>
  <goal name="vc_less_than&#39;0.2" expl="filter &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.024106" steps="6186"/></proof>
  </goal>
  <goal name="vc_less_than&#39;0.3" expl="filter &#39;predicate&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.026382" steps="7317"/></proof>
  </goal>
  <goal name="vc_less_than&#39;0.4" expl="filter requires #0" proved="true">
  <proof prover="3"><result status="valid" time="0.016080" steps="14246"/></proof>
  </goal>
  <goal name="vc_less_than&#39;0.5" expl="filter requires #1" proved="true">
  <proof prover="3"><result status="valid" time="0.021039" steps="14101"/></proof>
  </goal>
  <goal name="vc_less_than&#39;0.6" expl="filter requires #2" proved="true">
  <proof prover="3"><result status="valid" time="0.016008" steps="15953"/></proof>
  </goal>
  <goal name="vc_less_than&#39;0.7" expl="filter requires #3" proved="true">
  <proof prover="3"><result status="valid" time="0.023115" steps="15513"/></proof>
  </goal>
  <goal name="vc_less_than&#39;0.8" expl="collect &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.025616" steps="6219"/></proof>
  </goal>
  <goal name="vc_less_than&#39;0.9" expl="less_than ensures #0" proved="true">
  <transf name="unfold" proved="true" arg1="produces&#39;0" arg2="in" arg3="Assert">
   <goal name="vc_less_than&#39;0.9.0" expl="less_than ensures #0" proved="true">
   <transf name="unfold" proved="true" arg1="postcondition_mut&#39;0" arg2="in" arg3="Assert">
    <goal name="vc_less_than&#39;0.9.0.0" expl="less_than ensures #0" proved="true">
    <proof prover="2"><result status="valid" time="0.070261" steps="24915"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_less_than&#39;0.10" expl="less_than ensures #1" proved="true">
  <transf name="destruct_rec" proved="true" arg1="Assert1">
   <goal name="vc_less_than&#39;0.10.0" expl="less_than ensures #1" proved="true">
   <transf name="unfold" proved="true" arg1="produces&#39;0" arg2="in" arg3="Assert2">
    <goal name="vc_less_than&#39;0.10.0.0" expl="less_than ensures #1" proved="true">
    <transf name="destruct_rec" proved="true" arg1="Assert2">
     <goal name="vc_less_than&#39;0.10.0.0.0" expl="less_than ensures #1" proved="true">
     <transf name="assert" proved="true" arg1="(forall i . contains&#39;0 s i -&gt; contains&#39;0 (view&#39;0 v) i)">
      <goal name="vc_less_than&#39;0.10.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
       <goal name="vc_less_than&#39;0.10.0.0.0.0.0" expl="asserted formula" proved="true">
       <proof prover="1"><result status="valid" time="0.076828" steps="1639"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="vc_less_than&#39;0.10.0.0.0.1" expl="less_than ensures #1" proved="true">
      <proof prover="0"><result status="valid" time="0.036507" steps="124572"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
