<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="2" name="Z3" version="4.12.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.6.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC5" version="1.0.5" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="06_map_precond.coma"/>
<theory name="M_06_map_precond__qyi18374305379273630819__produces_refl__refines" proved="true">
 <goal name="refines" proved="true">
 <proof prover="3"><result status="valid" time="0.039759" steps="0"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi18374305379273630819__produces_refl" proved="true">
 <goal name="vc_produces_refl&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_produces_refl&#39;0.0" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="vc_produces_refl&#39;0.0.0" proved="true">
   <proof prover="4"><result status="valid" time="0.092212" steps="11052"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi18374305379273630819__produces_trans__refines" proved="true">
 <goal name="refines" proved="true">
 <proof prover="3"><result status="valid" time="0.038764" steps="0"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi18374305379273630819__produces_trans" proved="true">
 <goal name="vc_produces_trans&#39;0" proved="true">
 <transf name="unfold" proved="true" arg1="produces&#39;0">
  <goal name="vc_produces_trans&#39;0.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_produces_trans&#39;0.0.0" proved="true">
   <proof prover="3" timelimit="1"><result status="valid" time="0.021772" steps="49"/></proof>
   </goal>
   <goal name="vc_produces_trans&#39;0.0.1" proved="true">
   <transf name="exists" proved="true" arg1="(fs++fs1)">
    <goal name="vc_produces_trans&#39;0.0.1.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_produces_trans&#39;0.0.1.0.0" proved="true">
     <proof prover="3"><result status="valid" time="0.029943" steps="39"/></proof>
     </goal>
     <goal name="vc_produces_trans&#39;0.0.1.0.1" proved="true">
     <transf name="exists" proved="true" arg1="(s++s1)">
      <goal name="vc_produces_trans&#39;0.0.1.0.1.0" proved="true">
      <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
       <goal name="vc_produces_trans&#39;0.0.1.0.1.0.0" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="vc_produces_trans&#39;0.0.1.0.1.0.0.0" proved="true">
        <proof prover="3"><result status="valid" time="0.031077" steps="45"/></proof>
        </goal>
        <goal name="vc_produces_trans&#39;0.0.1.0.1.0.0.1" proved="true">
        <proof prover="4"><result status="valid" time="0.063623" steps="10715"/></proof>
        </goal>
        <goal name="vc_produces_trans&#39;0.0.1.0.1.0.0.2" proved="true">
        <proof prover="3"><result status="valid" time="0.032317" steps="250"/></proof>
        </goal>
        <goal name="vc_produces_trans&#39;0.0.1.0.1.0.0.3" proved="true">
        <proof prover="3"><result status="valid" time="0.091952" steps="392"/></proof>
        </goal>
        <goal name="vc_produces_trans&#39;0.0.1.0.1.0.0.4" proved="true">
        <proof prover="3"><result status="valid" time="0.031623" steps="71"/></proof>
        </goal>
        <goal name="vc_produces_trans&#39;0.0.1.0.1.0.0.5" proved="true">
        <proof prover="3"><result status="valid" time="0.053770" steps="166"/></proof>
        </goal>
        <goal name="vc_produces_trans&#39;0.0.1.0.1.0.0.6" proved="true">
        <proof prover="3"><result status="valid" time="0.058183" steps="204"/></proof>
        </goal>
        <goal name="vc_produces_trans&#39;0.0.1.0.1.0.0.7" proved="true">
        <proof prover="3"><result status="valid" time="0.181325" steps="722"/></proof>
        </goal>
        <goal name="vc_produces_trans&#39;0.0.1.0.1.0.0.8" proved="true">
        <transf name="instantiate" proved="true" arg1="H2" arg2="i">
         <goal name="vc_produces_trans&#39;0.0.1.0.1.0.0.8.0" proved="true">
         <transf name="instantiate" proved="true" arg1="H10" arg2="(i-length ab)">
          <goal name="vc_produces_trans&#39;0.0.1.0.1.0.0.8.0.0" proved="true">
          <proof prover="3"><result status="valid" time="0.359058" steps="3544"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="vc_produces_trans&#39;0.0.1.0.1.0.0.9" proved="true">
        <transf name="instantiate" proved="true" arg1="H2" arg2="i">
         <goal name="vc_produces_trans&#39;0.0.1.0.1.0.0.9.0" proved="true">
         <transf name="instantiate" proved="true" arg1="H10" arg2="(i-length ab)">
          <goal name="vc_produces_trans&#39;0.0.1.0.1.0.0.9.0.0" proved="true">
          <proof prover="3"><result status="valid" time="0.413791" steps="3587"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi18374305379273630819__next__refines" proved="true">
 <goal name="refines" proved="true">
 <proof prover="3"><result status="valid" time="0.120409" steps="866"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi18374305379273630819__next" proved="true">
 <goal name="vc_next&#39;0" proved="true">
 <proof prover="4"><result status="valid" time="0.210941" steps="19642"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi16548623944279504987__preservation_inv" proved="true">
 <goal name="vc_preservation_inv&#39;0" proved="true">
 <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
  <goal name="vc_preservation_inv&#39;0.0" proved="true">
  <proof prover="4" timelimit="1"><result status="valid" time="0.182945" steps="15345"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi16548623944279504987__produces_one_invariant" proved="true">
 <goal name="vc_produces_one_invariant&#39;0" proved="true">
 <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
  <goal name="vc_produces_one_invariant&#39;0.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_produces_one_invariant&#39;0.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.045086" steps="97791"/></proof>
   </goal>
   <goal name="vc_produces_one_invariant&#39;0.0.1" proved="true">
   <proof prover="3"><result status="valid" time="0.036797" steps="203"/></proof>
   </goal>
   <goal name="vc_produces_one_invariant&#39;0.0.2" proved="true">
   <proof prover="4"><result status="valid" time="0.188068" steps="30664"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi16548623944279504987__produces_one" proved="true">
 <goal name="vc_produces_one&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_produces_one&#39;0.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_produces_one&#39;0.0.0" proved="true">
   <transf name="unfold" proved="true" arg1="produces&#39;0">
    <goal name="vc_produces_one&#39;0.0.0.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_produces_one&#39;0.0.0.0.0" proved="true">
     <proof prover="3" timelimit="1"><result status="valid" time="0.017247" steps="16"/></proof>
     </goal>
     <goal name="vc_produces_one&#39;0.0.0.0.1" proved="true">
     <transf name="exists" proved="true" arg1="(singleton f)">
      <goal name="vc_produces_one&#39;0.0.0.0.1.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_produces_one&#39;0.0.0.0.1.0.0" proved="true">
       <proof prover="4" timelimit="1"><result status="valid" time="0.108061" steps="13720"/></proof>
       </goal>
       <goal name="vc_produces_one&#39;0.0.0.0.1.0.1" proved="true">
       <transf name="exists" proved="true" arg1="(singleton e)">
        <goal name="vc_produces_one&#39;0.0.0.0.1.0.1.0" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="vc_produces_one&#39;0.0.0.0.1.0.1.0.0" proved="true">
         <proof prover="3"><result status="valid" time="0.016188" steps="19"/></proof>
         </goal>
         <goal name="vc_produces_one&#39;0.0.0.0.1.0.1.0.1" proved="true">
         <proof prover="3"><result status="valid" time="0.015339" steps="12"/></proof>
         </goal>
         <goal name="vc_produces_one&#39;0.0.0.0.1.0.1.0.2" proved="true">
         <proof prover="4"><result status="valid" time="0.172796" steps="16042"/></proof>
         </goal>
         <goal name="vc_produces_one&#39;0.0.0.0.1.0.1.0.3" proved="true">
         <proof prover="3"><result status="valid" time="0.032982" steps="24"/></proof>
         </goal>
         <goal name="vc_produces_one&#39;0.0.0.0.1.0.1.0.4" proved="true">
         <proof prover="3"><result status="valid" time="0.031105" steps="18"/></proof>
         </goal>
         <goal name="vc_produces_one&#39;0.0.0.0.1.0.1.0.5" proved="true">
         <proof prover="3"><result status="valid" time="0.028779" steps="17"/></proof>
         </goal>
         <goal name="vc_produces_one&#39;0.0.0.0.1.0.1.0.6" proved="true">
         <proof prover="3"><result status="valid" time="0.022084" steps="21"/></proof>
         </goal>
         <goal name="vc_produces_one&#39;0.0.0.0.1.0.1.0.7" proved="true">
         <proof prover="3"><result status="valid" time="0.039822" steps="30"/></proof>
         </goal>
         <goal name="vc_produces_one&#39;0.0.0.0.1.0.1.0.8" proved="true">
         <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
          <goal name="vc_produces_one&#39;0.0.0.0.1.0.1.0.8.0" proved="true">
          <proof prover="3"><result status="valid" time="0.079180" steps="349"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="vc_produces_one&#39;0.0.0.0.1.0.1.0.9" proved="true">
         <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
          <goal name="vc_produces_one&#39;0.0.0.0.1.0.1.0.9.0" proved="true">
          <proof prover="3"><result status="valid" time="0.087548" steps="352"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_produces_one&#39;0.1" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="vc_produces_one&#39;0.1.0" proved="true">
   <proof prover="2"><result status="valid" time="0.184757" steps="256600"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__map" proved="true">
 <goal name="vc_map&#39;0" proved="true">
 <proof prover="4"><result status="valid" time="0.034690" steps="5317"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__identity" proved="true">
 <goal name="vc_closure0&#39;0" proved="true">
 <proof prover="3"><result status="valid" time="0.011285" steps="2"/></proof>
 </goal>
 <goal name="vc_identity&#39;0" proved="true">
 <proof prover="3" timelimit="1"><result status="valid" time="0.016418" steps="134"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__increment" proved="true">
 <goal name="vc_closure2&#39;0" proved="true">
 <proof prover="2"><result status="valid" time="0.014634" steps="12089"/></proof>
 </goal>
 <goal name="vc_increment&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_increment&#39;0.0" expl="map &#39;iter&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.095944" steps="10050"/></proof>
  </goal>
  <goal name="vc_increment&#39;0.1" expl="map &#39;func&#39; type invariant" proved="true">
  <proof prover="4" timelimit="1"><result status="valid" time="0.082459" steps="11517"/></proof>
  </goal>
  <goal name="vc_increment&#39;0.2" expl="map requires #0" proved="true">
  <proof prover="3" timelimit="1"><result status="valid" time="0.029129" steps="30"/></proof>
  </goal>
  <goal name="vc_increment&#39;0.3" expl="map requires #1" proved="true">
  <proof prover="4"><result status="valid" time="0.151673" steps="19265"/></proof>
  </goal>
  <goal name="vc_increment&#39;0.4" expl="map requires #2" proved="true">
  <proof prover="3" timelimit="1"><result status="valid" time="0.011868" steps="82"/></proof>
  </goal>
  <goal name="vc_increment&#39;0.5" expl="type invariant" proved="true">
  <proof prover="3" timelimit="1"><result status="valid" time="0.017114" steps="5"/></proof>
  </goal>
  <goal name="vc_increment&#39;0.6" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.156018" steps="20794"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__counter" proved="true">
 <goal name="vc_closure2&#39;0" proved="true">
 <proof prover="3"><result status="valid" time="0.018386" steps="77"/></proof>
 </goal>
 <goal name="vc_counter&#39;0" proved="true">
 <proof prover="3" timelimit="1"><result status="valid" time="0.075814" steps="502"/></proof>
 </goal>
</theory>
</file>
</why3session>
