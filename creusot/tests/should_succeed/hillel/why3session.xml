<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.12.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.6.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="hillel.coma"/>
<theory name="M_hillel__right_pad" proved="true">
 <goal name="vc_right_pad" proved="true">
 <proof prover="1"><result status="valid" time="0.050956" steps="216541"/></proof>
 </goal>
</theory>
<theory name="M_hillel__left_pad" proved="true">
 <goal name="vc_left_pad" proved="true">
 <proof prover="1"><result status="valid" time="0.032001" steps="121983"/></proof>
 </goal>
</theory>
<theory name="M_hillel__subset_push" proved="true">
 <goal name="vc_subset_push" proved="true">
 <proof prover="2"><result status="valid" time="0.021457" steps="151"/></proof>
 </goal>
</theory>
<theory name="M_hillel__insert_unique" proved="true">
 <goal name="vc_insert_unique" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_insert_unique.0" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.019716" steps="64352"/></proof>
  </goal>
  <goal name="vc_insert_unique.1" expl="deref &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.063493" steps="26"/></proof>
  </goal>
  <goal name="vc_insert_unique.2" expl="iter &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.032519" steps="12"/></proof>
  </goal>
  <goal name="vc_insert_unique.3" expl="into_iter &#39;self&#39; type invariant" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.076855" steps="69017"/></proof>
  </goal>
  <goal name="vc_insert_unique.4" expl="into_iter requires" proved="true">
  <proof prover="2"><result status="valid" time="0.021109" steps="16"/></proof>
  </goal>
  <goal name="vc_insert_unique.5" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.020108" steps="77"/></proof>
  </goal>
  <goal name="vc_insert_unique.6" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.024856" steps="20"/></proof>
  </goal>
  <goal name="vc_insert_unique.7" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.088562" steps="67"/></proof>
  </goal>
  <goal name="vc_insert_unique.8" expl="loop invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.018734" steps="28"/></proof>
  </goal>
  <goal name="vc_insert_unique.9" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.023575" steps="524"/></proof>
  </goal>
  <goal name="vc_insert_unique.10" expl="eq &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.041088" steps="127"/></proof>
  </goal>
  <goal name="vc_insert_unique.11" expl="eq &#39;other&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.016922" steps="132"/></proof>
  </goal>
  <goal name="vc_insert_unique.12" expl="for invariant" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="0.055906" steps="1248"/></proof>
  </goal>
  <goal name="vc_insert_unique.13" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.019998" steps="43"/></proof>
  </goal>
  <goal name="vc_insert_unique.14" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.022036" steps="150"/></proof>
  </goal>
  <goal name="vc_insert_unique.15" expl="loop invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.030891" steps="315"/></proof>
  </goal>
  <goal name="vc_insert_unique.16" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.011168" steps="7660"/></proof>
  </goal>
  <goal name="vc_insert_unique.17" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.018341" steps="40"/></proof>
  </goal>
  <goal name="vc_insert_unique.18" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.016593" steps="472"/></proof>
  </goal>
  <goal name="vc_insert_unique.19" expl="insert_unique ensures #0" proved="true">
  <proof prover="2"><result status="valid" time="0.019944" steps="48"/></proof>
  </goal>
  <goal name="vc_insert_unique.20" expl="insert_unique ensures #1" proved="true">
  <proof prover="2"><result status="valid" time="0.016827" steps="324"/></proof>
  </goal>
  <goal name="vc_insert_unique.21" expl="insert_unique ensures #2" proved="true">
  <proof prover="2"><result status="valid" time="0.029941" steps="51"/></proof>
  </goal>
  <goal name="vc_insert_unique.22" expl="insert_unique ensures #3" proved="true">
  <proof prover="2"><result status="valid" time="0.050170" steps="53"/></proof>
  </goal>
  <goal name="vc_insert_unique.23" proved="true">
  <proof prover="2"><result status="valid" time="0.019103" steps="31"/></proof>
  </goal>
  <goal name="vc_insert_unique.24" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.025807" steps="96063"/></proof>
  </goal>
  <goal name="vc_insert_unique.25" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.022031" steps="643"/></proof>
  </goal>
  <goal name="vc_insert_unique.26" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="0.023265" steps="102"/></proof>
  </goal>
  <goal name="vc_insert_unique.27" expl="push &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.019071" steps="54"/></proof>
  </goal>
  <goal name="vc_insert_unique.28" expl="push &#39;value&#39; type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.024731" steps="7960"/></proof>
  </goal>
  <goal name="vc_insert_unique.29" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.026880" steps="167"/></proof>
  </goal>
  <goal name="vc_insert_unique.30" expl="insert_unique ensures #0" proved="true">
  <proof prover="2"><result status="valid" time="0.045913" steps="1400"/></proof>
  </goal>
  <goal name="vc_insert_unique.31" expl="insert_unique ensures #1" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="1.240596" steps="31757"/></proof>
  </goal>
  <goal name="vc_insert_unique.32" expl="insert_unique ensures #2" proved="true">
  <proof prover="2"><result status="valid" time="0.150979" steps="589"/></proof>
  </goal>
  <goal name="vc_insert_unique.33" expl="insert_unique ensures #3" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="0.032602" steps="315"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_hillel__unique" proved="true">
 <goal name="vc_unique" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_unique.0" expl="len &#39;self&#39; type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.012812" steps="6876"/></proof>
  </goal>
  <goal name="vc_unique.1" expl="into_iter &#39;self&#39; type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.015080" steps="76161"/></proof>
  </goal>
  <goal name="vc_unique.2" expl="into_iter requires" proved="true">
  <proof prover="0"><result status="valid" time="0.095507" steps="10572"/></proof>
  </goal>
  <goal name="vc_unique.3" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.024337" steps="22"/></proof>
  </goal>
  <goal name="vc_unique.4" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.077666" steps="16"/></proof>
  </goal>
  <goal name="vc_unique.5" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.046283" steps="28"/></proof>
  </goal>
  <goal name="vc_unique.6" expl="loop invariant #0" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.007705" steps="7098"/></proof>
  </goal>
  <goal name="vc_unique.7" expl="loop invariant #1" proved="true">
  <proof prover="2"><result status="valid" time="0.021832" steps="68"/></proof>
  </goal>
  <goal name="vc_unique.8" expl="loop invariant #2" proved="true">
  <proof prover="2"><result status="valid" time="0.017427" steps="72"/></proof>
  </goal>
  <goal name="vc_unique.9" expl="loop invariant #3" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="0.018542" steps="85"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="vc_unique.9.0" expl="loop invariant #3" proved="true">
   <proof prover="1"><result status="valid" time="0.079061" steps="118580"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_unique.10" expl="next &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.018156" steps="40"/></proof>
  </goal>
  <goal name="vc_unique.11" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.513410" steps="1232670"/></proof>
  </goal>
  <goal name="vc_unique.12" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.134020" steps="516223"/></proof>
  </goal>
  <goal name="vc_unique.13" expl="unique result type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.017384" steps="40"/></proof>
  </goal>
  <goal name="vc_unique.14" expl="unique ensures #0" proved="true">
  <proof prover="2"><result status="valid" time="0.019214" steps="40"/></proof>
  </goal>
  <goal name="vc_unique.15" expl="unique ensures #1" proved="true">
  <proof prover="1"><result status="valid" time="0.012333" steps="9902"/></proof>
  </goal>
  <goal name="vc_unique.16" expl="unique ensures #2" proved="true">
  <proof prover="2"><result status="valid" time="0.021654" steps="57"/></proof>
  </goal>
  <goal name="vc_unique.17" expl="index in bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.032219" steps="304"/></proof>
  </goal>
  <goal name="vc_unique.18" proved="true">
  <proof prover="2"><result status="valid" time="0.021457" steps="78"/></proof>
  </goal>
  <goal name="vc_unique.19" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="0.018477" steps="42"/></proof>
  </goal>
  <goal name="vc_unique.20" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="0.018977" steps="44"/></proof>
  </goal>
  <goal name="vc_unique.21" expl="insert_unique &#39;vec&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.039624" steps="67"/></proof>
  </goal>
  <goal name="vc_unique.22" expl="insert_unique &#39;elem&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.163901" steps="2717"/></proof>
  </goal>
  <goal name="vc_unique.23" expl="insert_unique requires" proved="true">
  <proof prover="2"><result status="valid" time="0.016473" steps="73"/></proof>
  </goal>
  <goal name="vc_unique.24" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.022220" steps="81"/></proof>
  </goal>
  <goal name="vc_unique.25" expl="for invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.034473" steps="138127"/></proof>
  </goal>
  <goal name="vc_unique.26" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.018958" steps="86"/></proof>
  </goal>
  <goal name="vc_unique.27" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.018566" steps="290"/></proof>
  </goal>
  <goal name="vc_unique.28" expl="loop invariant #0" proved="true">
  <proof prover="2"><result status="valid" time="0.023071" steps="64"/></proof>
  </goal>
  <goal name="vc_unique.29" expl="loop invariant #1" proved="true">
  <proof prover="2"><result status="valid" time="0.023256" steps="102"/></proof>
  </goal>
  <goal name="vc_unique.30" expl="loop invariant #2" proved="true">
  <proof prover="1"><result status="valid" time="0.479493" steps="1189597"/></proof>
  </goal>
  <goal name="vc_unique.31" expl="loop invariant #3" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.638676" steps="1453392"/></proof>
  </goal>
  <goal name="vc_unique.32" proved="true">
  <proof prover="2"><result status="valid" time="0.019471" steps="44"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_hillel__sum_range" proved="true">
 <goal name="vc_sum_range" proved="true">
 <proof prover="2"><result status="valid" time="0.015233" steps="12"/></proof>
 </goal>
</theory>
<theory name="M_hillel__sum_range_split" proved="true">
 <goal name="vc_sum_range_split" proved="true">
 <proof prover="1"><result status="valid" time="0.020183" steps="58119"/></proof>
 </goal>
</theory>
<theory name="M_hillel__score" proved="true">
 <goal name="vc_score" proved="true">
 <proof prover="2"><result status="valid" time="0.023886" steps="183"/></proof>
 </goal>
</theory>
<theory name="M_hillel__fulcrum" proved="true">
 <goal name="vc_fulcrum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_fulcrum.0" expl="into_iter &#39;self&#39; type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.032600" steps="71906"/></proof>
  </goal>
  <goal name="vc_fulcrum.1" expl="into_iter requires" proved="true">
  <proof prover="2"><result status="valid" time="0.017855" steps="6"/></proof>
  </goal>
  <goal name="vc_fulcrum.2" expl="for invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.026406" steps="72322"/></proof>
  </goal>
  <goal name="vc_fulcrum.3" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.022690" steps="18"/></proof>
  </goal>
  <goal name="vc_fulcrum.4" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.021616" steps="97"/></proof>
  </goal>
  <goal name="vc_fulcrum.5" expl="loop invariant #0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_fulcrum.5.0" expl="loop invariant #0" proved="true">
   <proof prover="0"><result status="valid" time="0.162607" steps="11499"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_fulcrum.6" expl="loop invariant #1" proved="true">
  <proof prover="0"><result status="valid" time="0.134776" steps="11439"/></proof>
  </goal>
  <goal name="vc_fulcrum.7" expl="integer overflow" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_fulcrum.7.0" expl="integer overflow" proved="true">
   <proof prover="0"><result status="valid" time="0.358154" steps="61905"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_fulcrum.8" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.024047" steps="54"/></proof>
  </goal>
  <goal name="vc_fulcrum.9" expl="for invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.081748" steps="11095"/></proof>
  </goal>
  <goal name="vc_fulcrum.10" expl="for invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.021145" steps="101849"/></proof>
  </goal>
  <goal name="vc_fulcrum.11" expl="loop invariant #0" proved="true">
  <proof prover="1"><result status="valid" time="0.388224" steps="955413"/></proof>
  </goal>
  <goal name="vc_fulcrum.12" expl="loop invariant #1" proved="true">
  <proof prover="3"><result status="valid" time="0.076764" steps="30354"/></proof>
  </goal>
  <goal name="vc_fulcrum.13" proved="true">
  <proof prover="2"><result status="valid" time="0.019807" steps="43"/></proof>
  </goal>
  <goal name="vc_fulcrum.14" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.023684" steps="431"/></proof>
  </goal>
  <goal name="vc_fulcrum.15" expl="len &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.024137" steps="54"/></proof>
  </goal>
  <goal name="vc_fulcrum.16" expl="into_iter &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.020187" steps="64"/></proof>
  </goal>
  <goal name="vc_fulcrum.17" expl="into_iter requires" proved="true">
  <proof prover="1"><result status="valid" time="0.014178" steps="7059"/></proof>
  </goal>
  <goal name="vc_fulcrum.18" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.031784" steps="68"/></proof>
  </goal>
  <goal name="vc_fulcrum.19" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.030970" steps="44"/></proof>
  </goal>
  <goal name="vc_fulcrum.20" expl="for invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.067493" steps="12304"/></proof>
  </goal>
  <goal name="vc_fulcrum.21" expl="loop invariant #0" proved="true">
  <proof prover="0"><result status="valid" time="0.062778" steps="16789"/></proof>
  </goal>
  <goal name="vc_fulcrum.22" expl="loop invariant #1" proved="true">
  <proof prover="2"><result status="valid" time="0.021119" steps="86"/></proof>
  </goal>
  <goal name="vc_fulcrum.23" expl="loop invariant #2" proved="true">
  <proof prover="1"><result status="valid" time="0.029635" steps="111240"/></proof>
  </goal>
  <goal name="vc_fulcrum.24" expl="loop invariant #3" proved="true">
  <proof prover="1"><result status="valid" time="0.063105" steps="111498"/></proof>
  </goal>
  <goal name="vc_fulcrum.25" expl="loop invariant #4" proved="true">
  <proof prover="3"><result status="valid" time="0.035888" steps="23479"/></proof>
  </goal>
  <goal name="vc_fulcrum.26" expl="next &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.056368" steps="107"/></proof>
  </goal>
  <goal name="vc_fulcrum.27" expl="fulcrum ensures #0" proved="true">
  <proof prover="2"><result status="valid" time="0.011868" steps="116"/></proof>
  </goal>
  <goal name="vc_fulcrum.28" expl="fulcrum ensures #1" proved="true">
  <proof prover="2"><result status="valid" time="0.017430" steps="582"/></proof>
  </goal>
  <goal name="vc_fulcrum.29" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.024343" steps="143"/></proof>
  </goal>
  <goal name="vc_fulcrum.30" proved="true">
  <proof prover="2"><result status="valid" time="0.023483" steps="111"/></proof>
  </goal>
  <goal name="vc_fulcrum.31" expl="index in bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.088115" steps="1268"/></proof>
  </goal>
  <goal name="vc_fulcrum.32" proved="true">
  <proof prover="2"><result status="valid" time="0.028453" steps="206"/></proof>
  </goal>
  <goal name="vc_fulcrum.33" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.043173" steps="182073"/></proof>
  </goal>
  <goal name="vc_fulcrum.34" expl="for invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.099427" steps="16049"/></proof>
  </goal>
  <goal name="vc_fulcrum.35" expl="for invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.018700" steps="178"/></proof>
  </goal>
  <goal name="vc_fulcrum.36" expl="for invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.069936" steps="17102"/></proof>
  </goal>
  <goal name="vc_fulcrum.37" expl="loop invariant #0" proved="true">
  <proof prover="3"><result status="valid" time="0.244315" steps="65304"/></proof>
  </goal>
  <goal name="vc_fulcrum.38" expl="loop invariant #1" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.176238" steps="39847"/></proof>
  </goal>
  <goal name="vc_fulcrum.39" expl="loop invariant #2" proved="true">
  <proof prover="1"><result status="valid" time="0.238527" steps="837504"/></proof>
  </goal>
  <goal name="vc_fulcrum.40" expl="loop invariant #3" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.116204" steps="30939"/></proof>
  </goal>
  <goal name="vc_fulcrum.41" expl="loop invariant #4" proved="true">
  <proof prover="3"><result status="valid" time="0.170474" steps="46836"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
