<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.12.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.6.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="sparse_array.coma"/>
<theory name="M_sparse_array__qyi912363311032332466__get" proved="true">
 <goal name="vc_get&#39;0" proved="true">
 <proof prover="3"><result status="valid" time="0.102255" steps="30143"/></proof>
 </goal>
</theory>
<theory name="M_sparse_array__qyi912363311032332466__lemma_permutation" proved="true">
 <goal name="vc_lemma_permutation&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_lemma_permutation&#39;0.0" proved="true">
  <transf name="use_th" proved="true" arg1="map.MapInjection">
   <goal name="vc_lemma_permutation&#39;0.0.0" proved="true">
   <transf name="pose" proved="true" arg1="f" arg2="(fun k -&gt; to_int (get1 (view&#39;0 self.t_Sparse__back&#39;0) k))">
    <goal name="vc_lemma_permutation&#39;0.0.0.0" proved="true">
    <transf name="assert" proved="true" arg1="(surjective f self.t_Sparse__n&#39;0)">
     <goal name="vc_lemma_permutation&#39;0.0.0.0.0" expl="asserted formula" proved="true">
     <proof prover="1"><result status="valid" time="0.084382" steps="22903"/></proof>
     </goal>
     <goal name="vc_lemma_permutation&#39;0.0.0.0.1" proved="true">
     <transf name="assert" proved="true" arg1="(exists k. 0 &lt;= k &lt; self.t_Sparse__n&#39;0 /\ (f k) = i)">
      <goal name="vc_lemma_permutation&#39;0.0.0.0.1.0" expl="asserted formula" proved="true">
      <proof prover="2" timelimit="5"><result status="valid" time="0.044305" steps="325"/></proof>
      </goal>
      <goal name="vc_lemma_permutation&#39;0.0.0.0.1.1" proved="true">
      <proof prover="0" timelimit="5"><result status="valid" time="0.045971" steps="74345"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_sparse_array__qyi912363311032332466__set" proved="true">
 <goal name="vc_set&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_set&#39;0.0" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.032929" steps="65833"/></proof>
  </goal>
  <goal name="vc_set&#39;0.1" expl="index_mut &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.018377" steps="16"/></proof>
  <proof prover="3"><result status="valid" time="0.108040" steps="35434"/></proof>
  </goal>
  <goal name="vc_set&#39;0.2" expl="index_mut &#39;index&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.055557" steps="63870"/></proof>
  <proof prover="3"><result status="valid" time="0.036129" steps="10181"/></proof>
  </goal>
  <goal name="vc_set&#39;0.3" expl="index_mut requires" proved="true">
  <proof prover="2"><result status="valid" time="0.023081" steps="87"/></proof>
  <proof prover="3"><result status="valid" time="0.305596" steps="44453"/></proof>
  </goal>
  <goal name="vc_set&#39;0.4" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.227039" steps="39189"/></proof>
  </goal>
  <goal name="vc_set&#39;0.5" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.030498" steps="89341"/></proof>
  <proof prover="3"><result status="valid" time="0.224629" steps="39271"/></proof>
  </goal>
  <goal name="vc_set&#39;0.6" expl="index &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.017632" steps="30"/></proof>
  <proof prover="3"><result status="valid" time="0.109818" steps="13275"/></proof>
  </goal>
  <goal name="vc_set&#39;0.7" expl="index &#39;index&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.043152" steps="13280"/></proof>
  </goal>
  <goal name="vc_set&#39;0.8" expl="index requires" proved="true">
  <proof prover="0"><result status="valid" time="0.022576" steps="102770"/></proof>
  </goal>
  <goal name="vc_set&#39;0.9" expl="index &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.094390" steps="15149"/></proof>
  </goal>
  <goal name="vc_set&#39;0.10" expl="index &#39;index&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.152725" steps="15159"/></proof>
  </goal>
  <goal name="vc_set&#39;0.11" expl="index requires" proved="true">
  <proof prover="2"><result status="valid" time="0.126779" steps="200"/></proof>
  <proof prover="3"><result status="valid" time="0.248294" steps="43383"/></proof>
  </goal>
  <goal name="vc_set&#39;0.12" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.287309" steps="44614"/></proof>
  </goal>
  <goal name="vc_set&#39;0.13" expl="set ensures #0" proved="true">
  <proof prover="2"><result status="valid" time="0.065019" steps="342"/></proof>
  <proof prover="3"><result status="valid" time="0.659356" steps="63468"/></proof>
  </goal>
  <goal name="vc_set&#39;0.14" expl="set ensures #1" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.094244" steps="394037"/></proof>
  </goal>
  <goal name="vc_set&#39;0.15" expl="set ensures #2" proved="true">
  <proof prover="3"><result status="valid" time="0.631922" steps="60886"/></proof>
  </goal>
  <goal name="vc_set&#39;0.16" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.889551" steps="2539388"/></proof>
  <proof prover="3"><result status="valid" time="0.532919" steps="51654"/></proof>
  </goal>
  <goal name="vc_set&#39;0.17" expl="index_mut &#39;self&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.029177" steps="119189"/></proof>
  </goal>
  <goal name="vc_set&#39;0.18" expl="index_mut &#39;index&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.064384" steps="15798"/></proof>
  </goal>
  <goal name="vc_set&#39;0.19" expl="index_mut requires" proved="true">
  <proof prover="3"><result status="valid" time="0.508932" steps="52854"/></proof>
  </goal>
  <goal name="vc_set&#39;0.20" expl="index_mut &#39;self&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.116015" steps="17221"/></proof>
  </goal>
  <goal name="vc_set&#39;0.21" expl="index_mut &#39;index&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.113681" steps="17224"/></proof>
  </goal>
  <goal name="vc_set&#39;0.22" expl="index_mut requires" proved="true">
  <proof prover="2"><result status="valid" time="0.127798" steps="672"/></proof>
  <proof prover="3"><result status="valid" time="0.471481" steps="50255"/></proof>
  </goal>
  <goal name="vc_set&#39;0.23" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.013755" steps="298"/></proof>
  <proof prover="3"><result status="valid" time="0.512325" steps="49804"/></proof>
  </goal>
  <goal name="vc_set&#39;0.24" expl="type invariant" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.085051" steps="320507"/></proof>
  </goal>
  <goal name="vc_set&#39;0.25" expl="set ensures #0" proved="true">
  <proof prover="2"><result status="valid" time="0.125329" steps="628"/></proof>
  <proof prover="3"><result status="valid" time="0.747794" steps="59119"/></proof>
  </goal>
  <goal name="vc_set&#39;0.26" expl="set ensures #1" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.105753" steps="428510"/></proof>
  </goal>
  <goal name="vc_set&#39;0.27" expl="set ensures #2" proved="true">
  <proof prover="2"><result status="valid" time="0.023393" steps="644"/></proof>
  <proof prover="3"><result status="valid" time="0.854039" steps="68052"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_sparse_array__create" proved="true">
 <goal name="vc_create&#39;0" proved="true">
 <proof prover="2"><result status="valid" time="0.030648" steps="264"/></proof>
 </goal>
</theory>
<theory name="M_sparse_array__f" proved="true">
 <goal name="vc_f&#39;0" proved="true">
 <proof prover="0"><result status="valid" time="0.048646" steps="148001"/></proof>
 </goal>
</theory>
</file>
</why3session>
