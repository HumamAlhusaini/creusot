<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.12.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC5" version="1.0.5" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.6.0" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="heapsort_generic.coma"/>
<theory name="M_heapsort_generic__heap_frag_max" proved="true">
 <goal name="vc_heap_frag_max&#39;0" proved="true">
 <proof prover="4"><result status="valid" time="0.020350" steps="190"/></proof>
 </goal>
</theory>
<theory name="M_heapsort_generic__sift_down" proved="true">
 <goal name="vc_sift_down&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_sift_down&#39;0.0" expl="mut invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.042932" steps="11"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.1" expl="loop invariant #0" proved="true">
  <proof prover="3"><result status="valid" time="0.067239" steps="24770"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.2" expl="loop invariant #1" proved="true">
  <proof prover="3"><result status="valid" time="0.030075" steps="16187"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.3" expl="loop invariant #2" proved="true">
  <proof prover="4"><result status="valid" time="0.035532" steps="21"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.4" expl="loop invariant #3" proved="true">
  <proof prover="4"><result status="valid" time="0.037780" steps="56"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.5" expl="loop invariant #4" proved="true">
  <proof prover="4"><result status="valid" time="0.020800" steps="74"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.6" expl="loop invariant #5" proved="true">
  <proof prover="4"><result status="valid" time="0.125682" steps="196"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.7" expl="loop invariant #6" proved="true">
  <proof prover="4"><result status="valid" time="0.078982" steps="439"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.8" expl="division by zero" proved="true">
  <proof prover="4"><result status="valid" time="0.021117" steps="25"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.9" expl="division by zero" proved="true">
  <proof prover="4"><result status="valid" time="0.021126" steps="29"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.10" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.034570" steps="62"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.11" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.058050" steps="155"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.12" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.032819" steps="111"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.13" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.046333" steps="220"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.14" expl="index &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.058881" steps="471"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.15" expl="index &#39;index&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.090855" steps="88"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.16" expl="index requires" proved="true">
  <proof prover="4"><result status="valid" time="0.041215" steps="230"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.17" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.040039" steps="94"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.18" expl="index &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.186790" steps="1101"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.19" expl="index &#39;index&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.039703" steps="104"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.20" expl="index requires" proved="true">
  <proof prover="4"><result status="valid" time="0.102707" steps="265"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.21" expl="lt &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.069788" steps="53"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.22" expl="lt &#39;other&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.029005" steps="53"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.23" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.042186" steps="119"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.24" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.061477" steps="258904"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.25" expl="sift_down ensures #0" proved="true">
  <proof prover="4"><result status="valid" time="0.070875" steps="572"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.26" expl="sift_down ensures #1" proved="true">
  <proof prover="4"><result status="valid" time="0.035974" steps="65"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.27" expl="sift_down ensures #2" proved="true">
  <proof prover="4"><result status="valid" time="0.026227" steps="223"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.28" expl="sift_down ensures #3" proved="true">
  <proof prover="4"><result status="valid" time="0.241231" steps="4638"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.29" expl="index &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="1.219079" steps="3492"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.30" expl="index &#39;index&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.043600" steps="94"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.31" expl="index requires" proved="true">
  <proof prover="4"><result status="valid" time="0.094249" steps="411"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.32" expl="index &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="1.319673" steps="3851"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.33" expl="index &#39;index&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.040365" steps="105"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.34" expl="index requires" proved="true">
  <proof prover="4"><result status="valid" time="0.034244" steps="339"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.35" expl="le &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.108513" steps="48"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.36" expl="le &#39;other&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.053937" steps="13421"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.37" proved="true">
  <proof prover="2"><result status="valid" time="0.905211" steps="3306750"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.38" expl="deref_mut &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.112304" steps="120"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.39" proved="true">
  <proof prover="4"><result status="valid" time="0.071303" steps="355"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.40" expl="swap &#39;self&#39; type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.040850" steps="179018"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.41" expl="swap requires #0" proved="true">
  <proof prover="2"><result status="valid" time="0.043191" steps="194579"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.42" expl="swap requires #1" proved="true">
  <proof prover="2"><result status="valid" time="0.067651" steps="448794"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.43" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.066606" steps="433"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.44" expl="mut invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.059609" steps="69"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.45" expl="loop invariant #0" proved="true">
  <proof prover="4"><result status="valid" time="0.090607" steps="464"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.46" expl="loop invariant #1" proved="true">
  <proof prover="4"><result status="valid" time="0.093170" steps="834"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.47" expl="loop invariant #2" proved="true">
  <proof prover="0"><result status="valid" time="0.147423" steps="51302"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.48" expl="loop invariant #3" proved="true">
  <proof prover="0"><result status="valid" time="1.095273" steps="132983"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.49" expl="loop invariant #4" proved="true">
  <proof prover="3"><result status="valid" time="1.813854" steps="141106"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.50" expl="loop invariant #5" proved="true">
  <proof prover="3"><result status="valid" time="0.921617" steps="102123"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.51" expl="loop invariant #6" proved="true">
  <proof prover="3"><result status="valid" time="1.103650" steps="115942"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.52" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_sift_down&#39;0.52.0" expl="type invariant" proved="true">
   <proof prover="2" timelimit="1"><result status="valid" time="0.161732" steps="1117546"/></proof>
   </goal>
   <goal name="vc_sift_down&#39;0.52.1" expl="type invariant" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_sift_down&#39;0.52.1.0" expl="type invariant" proved="true">
    <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="5.622170" steps="26073575"/></proof>
    </goal>
    <goal name="vc_sift_down&#39;0.52.1.1" expl="type invariant" proved="true">
    <proof prover="4" timelimit="10" memlimit="4000"><result status="valid" time="6.095574" steps="22754"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_sift_down&#39;0.53" expl="sift_down ensures #0" proved="true">
  <proof prover="4"><result status="valid" time="1.116683" steps="7596"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.54" expl="sift_down ensures #1" proved="true">
  <proof prover="4"><result status="valid" time="0.034745" steps="120"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.55" expl="sift_down ensures #2" proved="true">
  <proof prover="4"><result status="valid" time="0.031081" steps="487"/></proof>
  </goal>
  <goal name="vc_sift_down&#39;0.56" expl="sift_down ensures #3" proved="true">
  <proof prover="4"><result status="valid" time="1.177287" steps="13042"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_heapsort_generic__heap_sort" proved="true">
 <goal name="vc_heap_sort&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_heap_sort&#39;0.0" expl="len &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.030517" steps="36"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.1" expl="division by zero" proved="true">
  <proof prover="4"><result status="valid" time="0.029951" steps="11"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.2" expl="division by zero" proved="true">
  <proof prover="4"><result status="valid" time="0.031219" steps="15"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.3" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.021853" steps="42"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.4" expl="mut invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.031607" steps="36"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.5" expl="loop invariant #0" proved="true">
  <proof prover="0"><result status="valid" time="0.125675" steps="31366"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.6" expl="loop invariant #1" proved="true">
  <proof prover="4"><result status="valid" time="0.024500" steps="372"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.7" expl="loop invariant #2" proved="true">
  <proof prover="4"><result status="valid" time="0.020248" steps="58"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.8" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.034687" steps="71"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.9" proved="true">
  <proof prover="4"><result status="valid" time="0.173906" steps="448"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.10" expl="len &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.021231" steps="61"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.11" expl="sift_down &#39;v&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.024361" steps="76"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.12" expl="sift_down requires #0" proved="true">
  <proof prover="4"><result status="valid" time="0.027273" steps="81"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.13" expl="sift_down requires #1" proved="true">
  <proof prover="4"><result status="valid" time="0.024710" steps="107"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.14" expl="sift_down requires #2" proved="true">
  <proof prover="4"><result status="valid" time="0.029244" steps="88"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.15" expl="mut invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.036481" steps="39"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.16" expl="loop invariant #0" proved="true">
  <proof prover="4"><result status="valid" time="0.035604" steps="464"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.17" expl="loop invariant #1" proved="true">
  <proof prover="4"><result status="valid" time="0.038279" steps="266"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.18" expl="loop invariant #2" proved="true">
  <proof prover="2"><result status="valid" time="0.086001" steps="191885"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.19" expl="len &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.112342" steps="401"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.20" expl="mut invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.035235" steps="62"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.21" expl="loop invariant #0" proved="true">
  <proof prover="4"><result status="valid" time="0.024442" steps="74"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.22" expl="loop invariant #1" proved="true">
  <proof prover="4"><result status="valid" time="0.037237" steps="39"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.23" expl="loop invariant #2" proved="true">
  <proof prover="4"><result status="valid" time="0.062006" steps="94"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.24" expl="loop invariant #3" proved="true">
  <proof prover="4"><result status="valid" time="0.060614" steps="144"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.25" expl="loop invariant #4" proved="true">
  <proof prover="4"><result status="valid" time="0.022408" steps="94"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.26" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.222731" steps="983"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.27" expl="heap_sort ensures #0" proved="true">
  <proof prover="4"><result status="valid" time="0.141493" steps="804"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.28" expl="heap_sort ensures #1" proved="true">
  <proof prover="4"><result status="valid" time="0.038961" steps="92"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.29" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.043659" steps="117"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.30" proved="true">
  <proof prover="4"><result status="valid" time="0.203544" steps="851"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.31" expl="deref_mut &#39;self&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.194638" steps="36293"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.32" proved="true">
  <proof prover="4"><result status="valid" time="0.041357" steps="306"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.33" expl="swap &#39;self&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.037155" steps="108"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.34" expl="swap requires #0" proved="true">
  <proof prover="3" timelimit="1"><result status="valid" time="0.171009" steps="32080"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.35" expl="swap requires #1" proved="true">
  <proof prover="4"><result status="valid" time="0.037882" steps="153"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.36" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.062718" steps="359"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.37" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.660239" steps="290580"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.38" proved="true">
  <proof prover="4"><result status="valid" time="0.022813" steps="71"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.39" expl="sift_down &#39;v&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.035966" steps="125"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.40" expl="sift_down requires #0" proved="true">
  <proof prover="4"><result status="valid" time="0.406290" steps="4525"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.41" expl="sift_down requires #1" proved="true">
  <proof prover="4"><result status="valid" time="0.029042" steps="77"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.42" expl="sift_down requires #2" proved="true">
  <proof prover="0"><result status="valid" time="0.197364" steps="37015"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.43" expl="mut invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.032612" steps="77"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.44" expl="loop invariant #0" proved="true">
  <proof prover="3"><result status="valid" time="0.194772" steps="41013"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.45" expl="loop invariant #1" proved="true">
  <proof prover="4"><result status="valid" time="0.053319" steps="806"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.46" expl="loop invariant #2" proved="true">
  <proof prover="4"><result status="valid" time="0.059266" steps="146"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.47" expl="loop invariant #3" proved="true">
  <proof prover="0"><result status="valid" time="0.653138" steps="186171"/></proof>
  </goal>
  <goal name="vc_heap_sort&#39;0.48" expl="loop invariant #4" proved="true">
  <proof prover="3"><result status="valid" time="0.551083" steps="86116"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
